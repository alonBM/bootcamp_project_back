var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/Address.html",[0,1.046,1,1.046]],["body/interfaces/Address.html",[0,1.109,1,1.478,2,1.712,3,0.436,4,0.375,5,0.375,6,2.21,7,2.21,8,0.436,9,2.035,10,4.124,11,4.124,12,4.124,13,5.024,14,4.124,15,1.352,16,1.262,17,0.04,18,0.654,19,1.232,20,1.109,21,1.232,22,1.232,23,2.58,24,2.58,25,0.021,26,0.029,27,0.021]],["title/controllers/AppController.html",[28,1.291,29,1.822]],["body/controllers/AppController.html",[3,0.498,4,0.429,5,0.429,8,0.498,15,1.05,17,0.04,18,0.498,25,0.024,26,0.031,27,0.024,28,1.991,29,2.809,30,1.565,31,2.949,32,1.991,33,4.341,34,2.525,35,1.268,36,3.592,37,1.565,38,0.728,39,0.922,40,2.442,41,2.949,42,0.498,43,2.525,44,2.949,45,1.746,46,3.592]],["title/modules/AppModule.html",[47,1.046,48,1.822]],["body/modules/AppModule.html",[3,0.373,4,0.321,5,0.321,17,0.041,18,0.373,25,0.018,26,0.026,27,0.018,29,2.672,30,1.642,38,0.858,39,0.691,40,2.496,41,2.209,42,0.373,47,1.534,48,3.473,49,1.173,50,1.308,51,1.655,52,1.655,53,1.308,54,2.672,55,1.655,56,2.209,57,2.209,58,2.209,59,2.796,60,2.796,61,2.796,62,2.316,63,1.655,64,1.655,65,2.691,66,3.767,67,2.691,68,2.691,69,2.691,70,2.691,71,1.892,72,1.308,73,2.691,74,2.209,75,2.691,76,2.691,77,2.691]],["title/injectables/AppService.html",[40,1.44,78,1.291]],["body/injectables/AppService.html",[3,0.527,4,0.453,5,0.453,8,0.527,15,1.087,17,0.04,18,0.527,25,0.026,26,0.032,27,0.026,32,2.062,33,4.429,35,1.34,37,1.655,38,0.605,39,0.975,40,2.299,42,0.527,45,1.845,78,2.062,79,2.335,80,3.117,81,3.797,82,3.797,83,3.797]],["title/modules/CommonModule.html",[47,1.046,59,1.613]],["body/modules/CommonModule.html",[3,0.585,4,0.503,5,0.503,17,0.039,18,0.585,25,0.029,26,0.034,27,0.029,38,0.672,39,1.082,42,0.585,47,1.78,49,1.837,59,2.746,84,4.214]],["title/classes/ExceptionsFilter.html",[42,0.411,85,2.083]],["body/classes/ExceptionsFilter.html",[3,0.312,4,0.269,5,0.269,8,0.312,16,0.517,17,0.041,18,0.312,25,0.015,26,0.023,27,0.015,32,1.444,35,0.794,37,0.981,38,0.528,39,0.578,42,0.312,85,2.329,86,1.384,87,2.72,88,2.72,89,1.848,90,2.037,91,3.932,92,4.337,93,3.314,94,3.932,95,4.337,96,2.251,97,1.226,98,0.644,99,1.226,100,3.932,101,2.251,102,2.251,103,2.251,104,1.848,105,2.251,106,2.251,107,2.329,108,2.251,109,2.251,110,3.314,111,2.251,112,3.314,113,2.251,114,2.251,115,5.462,116,2.251,117,5.324,118,3.314,119,3.314,120,3.314,121,3.314,122,3.314,123,3.314,124,3.314,125,3.314,126,3.314,127,3.314,128,2.251,129,2.251,130,2.251]],["title/interfaces/InsuranceCompany.html",[0,1.046,131,1.613]],["body/interfaces/InsuranceCompany.html",[0,1.421,1,1.614,2,1.614,3,0.411,4,0.354,5,0.354,8,0.411,9,1.957,15,1.309,16,1.127,17,0.04,18,0.635,19,1.792,20,1.046,22,1.792,25,0.02,26,0.027,27,0.02,38,0.642,90,1.823,98,0.848,131,2.49,132,1.823,133,4.027,134,4.027,135,3.871,136,1.614,137,1.614,138,2.831,139,1.441,140,1.441,141,1.441,142,1.441,143,1.441,144,1.441,145,1.823,146,1.823,147,2.084,148,2.084,149,2.084]],["title/interfaces/Patient.html",[0,1.046,20,1.046]],["body/interfaces/Patient.html",[0,1.246,1,1.854,2,1.337,3,0.341,4,0.293,5,0.293,8,0.341,9,1.715,15,1.321,16,1.263,17,0.04,18,0.574,19,2.059,20,1.246,22,2.059,25,0.017,26,0.024,27,0.017,38,0.563,90,2.17,98,1.292,131,2.46,132,1.51,133,2.016,134,2.016,135,2.905,136,1.337,137,1.337,138,2.905,139,1.193,140,2.196,141,2.196,142,2.196,143,2.008,144,2.196,145,2.778,146,2.778,147,1.726,148,1.726,149,1.726]],["title/controllers/PatientController.html",[28,1.291,150,1.822]],["body/controllers/PatientController.html",[3,0.296,4,0.254,5,0.254,8,0.296,15,1.186,16,0.971,17,0.041,18,0.296,20,0.753,25,0.015,26,0.022,27,0.015,28,0.929,30,0.929,32,1.387,34,3.177,35,1.595,37,1.97,38,0.673,39,0.548,42,0.296,43,1.499,45,2.196,97,2.3,98,1.208,99,2.3,150,1.957,151,1.751,152,1.751,153,2.133,154,2.613,155,2.613,156,2.613,157,3.468,158,3.127,159,1.751,160,2.941,161,3.127,162,2.133,163,3.231,164,1.751,165,2.613,166,2.133,167,3.021,168,1.751,169,2.613,170,2.133,171,2.133,172,2.133,173,2.613,174,2.133,175,1.751,176,1.751,177,2.613,178,1.751,179,1.751,180,1.851,181,1.751,182,1.751,183,1.311,184,2.133,185,2.133,186,2.133,187,2.133,188,2.133,189,2.133,190,2.133,191,2.133,192,1.751,193,2.133]],["title/classes/PatientDto.html",[42,0.411,160,1.613]],["body/classes/PatientDto.html",[1,1.763,3,0.343,4,0.295,5,0.295,8,0.343,9,1.724,15,1.278,16,1.265,17,0.04,18,0.343,19,1.958,22,1.958,25,0.017,26,0.024,27,0.017,35,1.943,38,0.565,42,0.343,86,1.52,98,1.186,131,2.259,136,1.346,137,1.346,140,2.016,141,2.016,142,2.016,143,1.724,144,2.016,145,2.551,146,2.551,160,1.932,194,4.566,195,1.738,196,2.551,197,2.03,198,2.03,199,2.03,200,2.03,201,2.03,202,2.03,203,2.03,204,2.03,205,2.03,206,2.03,207,2.03,208,2.472]],["title/modules/PatientModule.html",[47,1.046,60,1.613]],["body/modules/PatientModule.html",[3,0.442,4,0.38,5,0.38,17,0.04,18,0.442,20,1.124,25,0.022,26,0.029,27,0.022,30,1.841,38,0.838,39,0.818,42,0.442,47,1.673,49,1.388,50,1.547,51,1.958,52,1.958,53,1.547,54,2.915,55,1.958,60,2.941,62,2.598,63,1.958,64,1.958,71,2.238,72,1.547,150,2.915,180,2.625,181,2.614,209,2.614,210,2.614,211,3.184,212,3.184,213,2.97,214,3.184,215,2.614,216,2.614]],["title/injectables/PatientService.html",[78,1.291,180,1.44]],["body/injectables/PatientService.html",[3,0.284,4,0.244,5,0.244,8,0.284,15,1.172,16,1.019,17,0.041,18,0.284,20,1.088,25,0.014,26,0.021,27,0.014,32,1.343,35,1.646,37,1.934,38,0.707,39,0.525,42,0.284,45,2.156,72,0.993,78,1.343,79,1.256,97,2.416,98,1.269,99,2.416,107,1.436,139,0.993,154,2.531,155,2.531,156,2.531,157,3.394,158,2.531,159,2.531,160,2.914,163,3.197,164,2.531,167,2.542,168,2.531,179,1.677,180,1.498,182,1.677,183,1.256,196,1.256,217,1.677,218,4.527,219,1.677,220,2.043,221,3.394,222,2.043,223,3.083,224,2.043,225,2.043,226,2.043,227,2.043,228,3.083,229,2.043,230,1.677,231,2.043,232,1.677,233,3.643,234,2.043,235,2.043,236,2.043,237,1.256,238,2.043,239,2.043,240,2.043]],["title/interfaces/Professional.html",[0,1.046,21,1.161]],["body/interfaces/Professional.html",[0,0.897,1,1.871,2,1.384,3,0.353,4,0.303,5,0.303,8,0.353,9,1.758,15,1.313,16,1.272,17,0.04,18,0.502,19,2.078,21,1.418,22,2.078,25,0.017,26,0.025,27,0.017,38,0.577,90,2.224,98,1.312,136,1.384,137,1.384,138,2.961,139,1.235,140,2.23,141,2.23,142,2.23,143,2.047,144,2.23,241,1.786,242,3.226,243,3.26,244,2.086,245,2.086,246,2.086]],["title/controllers/ProfessionalController.html",[28,1.291,247,1.822]],["body/controllers/ProfessionalController.html",[3,0.293,4,0.252,5,0.252,8,0.293,15,1.183,16,0.966,17,0.041,18,0.293,21,0.829,25,0.014,26,0.022,27,0.014,28,0.921,30,0.921,32,1.378,34,3.165,35,1.589,37,1.962,38,0.67,39,0.543,42,0.293,43,1.486,45,2.188,97,2.29,98,1.203,99,2.29,152,1.736,161,3.111,163,3.224,165,2.596,167,3.012,169,2.596,173,2.596,175,1.736,176,1.736,177,3.111,178,1.736,183,1.3,192,1.736,247,1.945,248,1.736,249,1.736,250,3.111,251,2.596,252,3.453,253,2.596,254,3.111,255,1.736,256,2.936,257,2.114,258,1.736,259,2.114,260,2.114,261,1.736,262,2.114,263,2.114,264,2.114,265,1.736,266,1.841,267,1.736,268,1.736,269,2.114,270,2.114,271,2.114,272,2.114,273,2.114,274,2.114,275,2.114,276,2.114]],["title/classes/ProfessionalDto.html",[42,0.411,256,1.613]],["body/classes/ProfessionalDto.html",[1,1.763,3,0.343,4,0.295,5,0.295,8,0.343,9,1.724,15,1.278,16,1.265,17,0.04,18,0.343,19,1.958,22,1.958,25,0.017,26,0.024,27,0.017,35,1.943,38,0.565,42,0.343,86,1.52,98,1.186,136,1.346,137,1.346,140,2.016,141,2.016,142,2.016,143,1.724,144,2.016,195,1.738,196,2.551,197,2.03,198,2.03,199,2.03,200,2.03,201,2.03,202,2.03,203,2.03,204,2.03,205,2.03,206,2.03,207,2.03,242,2.916,243,3.071,256,1.932,277,4.566,278,2.472]],["title/modules/ProfessionalModule.html",[47,1.046,61,1.613]],["body/modules/ProfessionalModule.html",[3,0.444,4,0.382,5,0.382,17,0.04,18,0.444,21,1.253,25,0.022,26,0.029,27,0.022,30,1.847,38,0.839,39,0.821,42,0.444,47,1.677,49,1.394,50,1.554,51,1.967,52,1.967,53,1.554,54,2.922,55,1.967,61,2.945,62,2.605,63,1.967,64,1.967,71,2.248,72,1.554,215,2.626,216,2.626,247,2.922,266,2.628,267,2.626,279,2.626,280,2.626,281,3.198,282,3.198,283,2.979,284,3.198]],["title/injectables/ProfessionalService.html",[78,1.291,266,1.44]],["body/injectables/ProfessionalService.html",[3,0.277,4,0.238,5,0.238,8,0.277,15,1.165,16,1.01,17,0.04,18,0.277,21,1.188,25,0.014,26,0.021,27,0.014,32,1.321,35,1.633,37,1.915,38,0.701,39,0.513,42,0.277,44,1.64,45,2.136,72,0.971,78,1.321,79,1.229,97,2.393,98,1.257,99,2.393,107,2.131,139,0.971,163,3.178,167,2.514,183,1.229,196,1.229,218,4.509,219,1.64,221,3.356,230,1.64,232,1.64,233,3.608,237,1.229,249,2.489,250,3.007,251,3.007,252,3.356,253,2.489,254,3.007,255,2.489,256,2.9,258,2.489,261,2.489,265,1.64,266,1.473,268,1.64,285,1.64,286,1.998,287,1.998,288,3.031,289,1.998,290,1.998,291,1.998,292,1.998,293,3.031,294,1.998,295,1.998,296,1.998,297,1.998,298,1.998,299,1.998,300,1.998,301,1.998]],["title/coverage.html",[302,2.83]],["body/coverage.html",[0,1.672,1,0.964,5,0.326,6,1.92,7,1.92,16,0.628,17,0.04,20,0.964,21,1.07,25,0.019,26,0.026,27,0.019,28,1.909,29,1.679,31,2.242,40,1.327,42,0.608,53,1.327,78,1.909,80,2.242,85,1.92,87,2.242,88,2.242,89,2.242,131,1.487,132,2.34,150,1.679,151,2.242,160,1.487,180,1.327,194,2.242,195,2.676,213,1.92,217,2.242,237,1.679,241,1.92,247,1.679,248,2.242,256,1.487,266,1.327,277,2.242,283,1.92,285,2.242,302,1.92,303,2.731,304,2.731,305,2.731,306,5.805,307,4.381,308,4.381,309,2.242,310,2.731,311,4.381,312,3.806,313,3.806,314,2.731,315,3.806,316,2.242,317,3.806,318,2.242,319,2.731,320,2.731]],["title/dependencies.html",[50,1.729,321,2.483]],["body/dependencies.html",[17,0.04,25,0.027,26,0.033,27,0.027,39,1.001,50,1.895,72,1.895,74,3.201,104,3.201,139,1.895,322,5.216,323,3.899,324,3.899,325,3.899,326,3.899,327,3.899,328,3.899,329,3.899,330,3.899,331,3.899,332,3.899,333,3.899,334,3.899]],["title/miscellaneous/functions.html",[335,1.207,336,2.921]],["body/miscellaneous/functions.html",[8,0.613,17,0.035,25,0.03,26,0.035,27,0.03,53,2.675,309,3.627,335,2.147,336,3.627,337,4.418]],["title/index.html",[8,0.345,338,2.483,339,2.483]],["body/index.html",[4,0.345,17,0.04,25,0.02,26,0.027,27,0.02,302,2.034,340,2.894,341,2.894,342,3.961,343,2.894,344,2.894,345,2.894,346,2.894,347,2.894,348,2.894,349,2.894,350,2.894,351,2.894,352,2.894,353,4.516,354,2.894,355,2.894,356,2.894,357,2.894,358,5.378,359,2.894,360,2.894,361,2.894,362,5.253,363,2.894,364,2.894,365,3.961,366,2.894,367,2.894,368,2.894,369,2.894,370,3.961,371,3.961,372,2.894,373,2.894,374,2.894,375,3.961,376,3.961,377,2.894,378,2.894,379,2.894,380,2.894,381,2.894,382,2.376,383,2.894,384,2.894,385,2.894,386,2.894,387,2.894,388,2.894,389,2.894,390,2.894,391,2.894,392,2.894,393,2.894,394,2.894,395,2.894,396,2.894,397,2.894,398,2.894,399,2.894,400,2.894]],["title/modules.html",[49,1.754]],["body/modules.html",[17,0.034,25,0.028,26,0.034,27,0.028,48,2.533,49,1.795,59,2.243,60,2.243,61,2.243,382,4.386,401,5.343,402,5.343,403,5.549,404,4.119,405,4.119]],["title/overview.html",[406,3.304]],["body/overview.html",[2,1.773,17,0.038,25,0.022,26,0.029,27,0.022,30,1.419,40,2.329,47,1.149,48,3.531,49,1.419,50,1.582,51,2.002,52,2.002,53,1.582,54,2.002,55,2.002,56,2.672,57,2.672,58,2.672,59,2.61,60,2.882,61,2.882,62,2.636,63,2.002,64,2.002,79,2.002,86,2.002,180,2.329,209,2.672,210,2.672,266,2.329,279,2.672,280,2.672,406,2.672,407,4.287,408,4.793]],["title/miscellaneous/typealiases.html",[335,1.207,409,3.558]],["body/miscellaneous/typealiases.html",[6,2.615,7,3.59,8,0.516,16,0.855,17,0.04,19,1.831,20,1.313,21,1.458,22,1.831,23,3.054,24,3.054,25,0.025,26,0.032,27,0.025,132,2.287,135,3.284,147,2.615,148,2.615,149,2.615,241,2.615,243,2.872,244,3.054,245,3.054,246,3.054,335,1.808,410,3.72,411,4.671,412,3.72,413,3.72]],["title/miscellaneous/variables.html",[335,1.207,414,2.921]],["body/miscellaneous/variables.html",[1,1.437,8,0.418,10,3.343,11,3.343,12,3.343,14,3.343,15,1.382,17,0.039,19,1.596,22,1.596,25,0.021,26,0.028,27,0.021,98,1.164,140,1.979,141,1.979,142,1.979,143,1.979,144,1.979,145,1.853,146,1.853,213,2.862,237,2.504,242,2.118,243,1.853,283,2.862,316,2.474,318,2.474,335,1.464,414,2.474,415,3.013,416,3.013,417,4.072,418,4.072,419,4.072,420,4.072,421,3.013]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":408,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":407,"title":{},"body":{"overview.html":{}}}],["5.9.25",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":196,"title":{},"body":{"classes/PatientDto.html":{},"injectables/PatientService.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{}}}],["address",{"_index":1,"title":{"interfaces/Address.html":{}},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["administrator",{"_index":246,"title":{},"body":{"interfaces/Professional.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":410,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":383,"title":{},"body":{"index.html":{}}}],["angular",{"_index":351,"title":{},"body":{"index.html":{}}}],["app",{"_index":360,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app/service/patient.service",{"_index":181,"title":{},"body":{"controllers/PatientController.html":{},"modules/PatientModule.html":{}}}],["app/service/professional.service",{"_index":267,"title":{},"body":{"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{}}}],["appcontroller",{"_index":29,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":348,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":40,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":95,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["array",{"_index":421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":218,"title":{},"body":{"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{}}}],["author",{"_index":393,"title":{},"body":{"index.html":{}}}],["available",{"_index":405,"title":{},"body":{"modules.html":{}}}],["await",{"_index":233,"title":{},"body":{"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{}}}],["backers",{"_index":384,"title":{},"body":{"index.html":{}}}],["baseexceptionfilter",{"_index":91,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["birthdate",{"_index":142,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":177,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["bootstrap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":403,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":401,"title":{},"body":{"modules.html":{}}}],["building",{"_index":343,"title":{},"body":{"index.html":{}}}],["cardnumber",{"_index":133,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{}}}],["catch",{"_index":92,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["catch(exception",{"_index":93,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["city",{"_index":10,"title":{},"body":{"interfaces/Address.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":42,"title":{"classes/ExceptionsFilter.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{}}}],["classes",{"_index":86,"title":{},"body":{"classes/ExceptionsFilter.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_patientmodule",{"_index":209,"title":{},"body":{"modules/PatientModule.html":{},"overview.html":{}}}],["cluster_patientmodule_providers",{"_index":210,"title":{},"body":{"modules/PatientModule.html":{},"overview.html":{}}}],["cluster_professionalmodule",{"_index":279,"title":{},"body":{"modules/ProfessionalModule.html":{},"overview.html":{}}}],["cluster_professionalmodule_providers",{"_index":280,"title":{},"body":{"modules/ProfessionalModule.html":{},"overview.html":{}}}],["common/common.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["common/interfaces/user",{"_index":136,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{}}}],["commonmodule",{"_index":59,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["configmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":107,"title":{},"body":{"classes/ExceptionsFilter.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{}}}],["constructor",{"_index":219,"title":{},"body":{"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{}}}],["constructor(@injectmodel('patient",{"_index":231,"title":{},"body":{"injectables/PatientService.html":{}}}],["constructor(@injectmodel('professional",{"_index":295,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["constructor(patientmodel",{"_index":220,"title":{},"body":{"injectables/PatientService.html":{}}}],["constructor(private",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["constructor(professionalmodel",{"_index":286,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["controller",{"_index":28,"title":{"controllers/AppController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}},"body":{"controllers/AppController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"coverage.html":{}}}],["controller('patients",{"_index":184,"title":{},"body":{"controllers/PatientController.html":{}}}],["controller('professionals",{"_index":269,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["controllers",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/PatientController.html":{},"modules/PatientModule.html":{},"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"overview.html":{}}}],["coverage",{"_index":302,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createpatient",{"_index":154,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["createpatient(@body",{"_index":190,"title":{},"body":{"controllers/PatientController.html":{}}}],["createpatient(patientdto",{"_index":159,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["createprofessional",{"_index":250,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["createprofessional(professionaldto",{"_index":255,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["date",{"_index":143,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"overview.html":{}}}],["decorators",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["default",{"_index":417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ExceptionsFilter.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{}}}],["delete",{"_index":176,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["delete('/:id",{"_index":165,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["deletepatient",{"_index":155,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["deletepatient(@param('id",{"_index":188,"title":{},"body":{"controllers/PatientController.html":{}}}],["deletepatient(id",{"_index":164,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["deleteprofessional",{"_index":251,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["deleteprofessional(@param('id",{"_index":273,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["deleteprofessional(id",{"_index":258,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["dental",{"_index":147,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":50,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":352,"title":{},"body":{"index.html":{}}}],["development",{"_index":361,"title":{},"body":{"index.html":{}}}],["doctor",{"_index":244,"title":{},"body":{"interfaces/Professional.html":{},"miscellaneous/typealiases.html":{}}}],["document",{"_index":138,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"interfaces/Professional.html":{}}}],["documentation",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["domain/dto/patient",{"_index":182,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["domain/dto/professional",{"_index":268,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["domain/models/patient.interface",{"_index":179,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["domain/models/professional.interface",{"_index":265,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["doornumber",{"_index":11,"title":{},"body":{"interfaces/Address.html":{},"miscellaneous/variables.html":{}}}],["dto",{"_index":183,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["dto.ts",{"_index":195,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":199,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:11",{"_index":205,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:12",{"_index":198,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:13",{"_index":207,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:14",{"_index":204,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:15",{"_index":202,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:5",{"_index":197,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:6",{"_index":203,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:7",{"_index":200,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:8",{"_index":206,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:9",{"_index":201,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["e2e",{"_index":372,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":344,"title":{},"body":{"index.html":{}}}],["error",{"_index":112,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception",{"_index":100,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.message",{"_index":113,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.message.error",{"_index":114,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.status",{"_index":117,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exceptionsfilter",{"_index":85,"title":{"classes/ExceptionsFilter.html":{}},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["export",{"_index":18,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{}}}],["exports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"overview.html":{}}}],["express",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":90,"title":{},"body":{"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"interfaces/Professional.html":{}}}],["false",{"_index":130,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["family",{"_index":149,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"miscellaneous/typealiases.html":{}}}],["female",{"_index":24,"title":{},"body":{"interfaces/Address.html":{},"miscellaneous/typealiases.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{}}}],["filter.ts",{"_index":89,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["filter.ts:6",{"_index":96,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["filter/exceptions",{"_index":88,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["firstsurname",{"_index":140,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":342,"title":{},"body":{"index.html":{}}}],["function",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":336,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":22,"title":{},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["get('/:id",{"_index":169,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["getallprofessionals",{"_index":252,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["gethello",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getpatient",{"_index":156,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["getpatient(@param('id",{"_index":186,"title":{},"body":{"controllers/PatientController.html":{}}}],["getpatient(id",{"_index":168,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["getpatients",{"_index":157,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["getprofessional",{"_index":253,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["getprofessional(@param('id",{"_index":271,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["getprofessional(id",{"_index":261,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["getting",{"_index":338,"title":{"index.html":{}},"body":{}}],["graph",{"_index":404,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":379,"title":{},"body":{"index.html":{}}}],["health",{"_index":148,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"miscellaneous/typealiases.html":{}}}],["heavily",{"_index":349,"title":{},"body":{"index.html":{}}}],["hello",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":390,"title":{},"body":{"index.html":{}}}],["host",{"_index":94,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["host.switchtohttp().getresponse",{"_index":109,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["https://nestjs.com",{"_index":397,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":102,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.bad_gateway",{"_index":118,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.bad_request",{"_index":119,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.conflict",{"_index":120,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.expectation_failed",{"_index":121,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.forbidden",{"_index":122,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":116,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.not_acceptable",{"_index":123,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.not_found",{"_index":124,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.request_timeout",{"_index":125,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.service_unavailable",{"_index":126,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.unauthorized",{"_index":127,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["id",{"_index":167,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["identifier",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{}}}],["imports",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["imports:[mongoosemodule.forfeature([{name",{"_index":215,"title":{},"body":{"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{}}}],["infrastructure/mongodb/patient.schema",{"_index":214,"title":{},"body":{"modules/PatientModule.html":{}}}],["infrastructure/mongodb/professional.schema",{"_index":284,"title":{},"body":{"modules/ProfessionalModule.html":{}}}],["injectable",{"_index":78,"title":{"injectables/AppService.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{}},"body":{"injectables/AppService.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{}}}],["injectables",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"overview.html":{}}}],["injectmodel",{"_index":230,"title":{},"body":{"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{}}}],["inspired",{"_index":350,"title":{},"body":{"index.html":{}}}],["installation",{"_index":357,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":359,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":111,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["insurancecompany",{"_index":131,"title":{"interfaces/InsuranceCompany.html":{}},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"coverage.html":{}}}],["insurancecompanyname",{"_index":134,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{}}}],["insurancelist",{"_index":146,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"miscellaneous/variables.html":{}}}],["insurancetype",{"_index":135,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"miscellaneous/typealiases.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"interfaces/Professional.html":{}},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"interfaces/Professional.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"interfaces/Professional.html":{},"overview.html":{}}}],["join",{"_index":386,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":394,"title":{},"body":{"index.html":{}}}],["legend",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"overview.html":{}}}],["license",{"_index":400,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":376,"title":{},"body":{"index.html":{}}}],["logger",{"_index":103,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["logger.error('exception",{"_index":105,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["male",{"_index":23,"title":{},"body":{"interfaces/Address.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":26,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medicalboardnumber",{"_index":242,"title":{},"body":{"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":110,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["metadata",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ExceptionsFilter.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["miscellaneous",{"_index":335,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":375,"title":{},"body":{"index.html":{}}}],["mode",{"_index":365,"title":{},"body":{"index.html":{}}}],["model",{"_index":221,"title":{},"body":{"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{}}}],["models/patient.interface",{"_index":208,"title":{},"body":{"classes/PatientDto.html":{}}}],["models/professional.interface",{"_index":278,"title":{},"body":{"classes/ProfessionalDto.html":{}}}],["module",{"_index":47,"title":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"overview.html":{}}}],["modules",{"_index":49,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb+srv://${process.env.user}:${process.env.password}@${process.env.host}?retrywrites=true&w=majority",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":139,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"injectables/ProfessionalService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{}}}],["mongoosemodule.forroot",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":389,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":395,"title":{},"body":{"index.html":{}}}],["name",{"_index":98,"title":{},"body":{"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":353,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":399,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"controllers/PatientController.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":104,"title":{},"body":{"classes/ExceptionsFilter.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":237,"title":{},"body":{"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nhc",{"_index":145,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"miscellaneous/variables.html":{}}}],["nif",{"_index":144,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":341,"title":{},"body":{"index.html":{}}}],["npm",{"_index":358,"title":{},"body":{"index.html":{}}}],["nurse",{"_index":245,"title":{},"body":{"interfaces/Professional.html":{},"miscellaneous/typealiases.html":{}}}],["open",{"_index":377,"title":{},"body":{"index.html":{}}}],["optional",{"_index":99,"title":{},"body":{"classes/ExceptionsFilter.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"overview.html":{}}}],["overview",{"_index":406,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":321,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":175,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["param('id",{"_index":192,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["parameters",{"_index":97,"title":{},"body":{"classes/ExceptionsFilter.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["patient",{"_index":20,"title":{"interfaces/Patient.html":{}},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["patient.save",{"_index":239,"title":{},"body":{"injectables/PatientService.html":{}}}],["patient/patient.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["patientcontroller",{"_index":150,"title":{"controllers/PatientController.html":{}},"body":{"controllers/PatientController.html":{},"modules/PatientModule.html":{},"coverage.html":{}}}],["patientdto",{"_index":160,"title":{"classes/PatientDto.html":{}},"body":{"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"coverage.html":{}}}],["patientmodel",{"_index":223,"title":{},"body":{"injectables/PatientService.html":{}}}],["patientmodule",{"_index":60,"title":{"modules/PatientModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules.html":{},"overview.html":{}}}],["patients",{"_index":153,"title":{},"body":{"controllers/PatientController.html":{}}}],["patientschema",{"_index":213,"title":{},"body":{"modules/PatientModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patientservice",{"_index":180,"title":{"injectables/PatientService.html":{}},"body":{"controllers/PatientController.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"coverage.html":{},"overview.html":{}}}],["please",{"_index":387,"title":{},"body":{"index.html":{}}}],["post",{"_index":161,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["postalcode",{"_index":12,"title":{},"body":{"interfaces/Address.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":152,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["private",{"_index":232,"title":{},"body":{"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{}}}],["production",{"_index":367,"title":{},"body":{"index.html":{}}}],["professional",{"_index":21,"title":{"interfaces/Professional.html":{}},"body":{"interfaces/Address.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["professional.save",{"_index":300,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["professional/professional.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["professionalcontroller",{"_index":247,"title":{"controllers/ProfessionalController.html":{}},"body":{"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"coverage.html":{}}}],["professionaldto",{"_index":256,"title":{"classes/ProfessionalDto.html":{}},"body":{"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{}}}],["professionalmodel",{"_index":288,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["professionalmodule",{"_index":61,"title":{"modules/ProfessionalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfessionalModule.html":{},"modules.html":{},"overview.html":{}}}],["professionals",{"_index":249,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["professionalschema",{"_index":283,"title":{},"body":{"modules/ProfessionalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["professionalservice",{"_index":266,"title":{"injectables/ProfessionalService.html":{}},"body":{"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{},"overview.html":{}}}],["professionaltype",{"_index":243,"title":{},"body":{"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":340,"title":{},"body":{"index.html":{}}}],["project",{"_index":378,"title":{},"body":{"index.html":{}}}],["promise",{"_index":163,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"overview.html":{}}}],["put",{"_index":178,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["put('/:id",{"_index":173,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["read",{"_index":388,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/ProfessionalService.html":{}}}],["reflect",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":356,"title":{},"body":{"index.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"overview.html":{}}}],["response",{"_index":108,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["response.status(status).json",{"_index":128,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["result",{"_index":25,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":27,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ExceptionsFilter.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["rimraf",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":362,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":345,"title":{},"body":{"index.html":{}}}],["schema",{"_index":216,"title":{},"body":{"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{}}}],["secondsurname",{"_index":141,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":346,"title":{},"body":{"index.html":{}}}],["side",{"_index":347,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"index.html":{}}}],["sponsors",{"_index":381,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../patient.interface.ts",{"_index":412,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../patient.schema.ts",{"_index":415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../professional.interface.ts",{"_index":413,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../professional.schema.ts",{"_index":416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":411,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/common.module.ts",{"_index":84,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/exceptions",{"_index":87,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/interfaces/user",{"_index":6,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/main.ts",{"_index":309,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/patient/app/service/patient.service.ts",{"_index":217,"title":{},"body":{"injectables/PatientService.html":{},"coverage.html":{}}}],["src/patient/app/service/patient.service.ts:11",{"_index":227,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:15",{"_index":226,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:19",{"_index":225,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:23",{"_index":224,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:28",{"_index":229,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:8",{"_index":222,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/domain/dto/patient",{"_index":194,"title":{},"body":{"classes/PatientDto.html":{},"coverage.html":{}}}],["src/patient/domain/models/patient.interface.ts",{"_index":132,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/patient/infrastructure/mongodb/patient.schema.ts",{"_index":316,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/patient/patient.module.ts",{"_index":211,"title":{},"body":{"modules/PatientModule.html":{}}}],["src/patient/ui/patient.controller.ts",{"_index":151,"title":{},"body":{"controllers/PatientController.html":{},"coverage.html":{}}}],["src/patient/ui/patient.controller.ts:11",{"_index":171,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patient/ui/patient.controller.ts:16",{"_index":170,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patient/ui/patient.controller.ts:21",{"_index":166,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patient/ui/patient.controller.ts:26",{"_index":162,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patient/ui/patient.controller.ts:31",{"_index":174,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/professional/app/service/professional.service.ts",{"_index":285,"title":{},"body":{"injectables/ProfessionalService.html":{},"coverage.html":{}}}],["src/professional/app/service/professional.service.ts:12",{"_index":291,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:17",{"_index":292,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:21",{"_index":290,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:25",{"_index":289,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:30",{"_index":294,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:8",{"_index":287,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/domain/dto/professional",{"_index":277,"title":{},"body":{"classes/ProfessionalDto.html":{},"coverage.html":{}}}],["src/professional/domain/models/professional.interface.ts",{"_index":241,"title":{},"body":{"interfaces/Professional.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/professional/infrastructure/mongodb/professional.schema.ts",{"_index":318,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/professional/professional.module.ts",{"_index":281,"title":{},"body":{"modules/ProfessionalModule.html":{}}}],["src/professional/ui/professional.controller.ts",{"_index":248,"title":{},"body":{"controllers/ProfessionalController.html":{},"coverage.html":{}}}],["src/professional/ui/professional.controller.ts:12",{"_index":260,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/professional/ui/professional.controller.ts:17",{"_index":262,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/professional/ui/professional.controller.ts:22",{"_index":259,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/professional/ui/professional.controller.ts:27",{"_index":257,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/professional/ui/professional.controller.ts:34",{"_index":264,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["start",{"_index":363,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":366,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":368,"title":{},"body":{"index.html":{}}}],["started",{"_index":339,"title":{"index.html":{}},"body":{}}],["starter",{"_index":355,"title":{},"body":{"index.html":{}}}],["statements",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":115,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["stay",{"_index":391,"title":{},"body":{"index.html":{}}}],["street",{"_index":420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["streetname",{"_index":13,"title":{},"body":{"interfaces/Address.html":{}}}],["streetnumber",{"_index":14,"title":{},"body":{"interfaces/Address.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":129,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["support",{"_index":382,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":402,"title":{},"body":{"modules.html":{}}}],["table",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":371,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":374,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":373,"title":{},"body":{"index.html":{}}}],["tests",{"_index":370,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":380,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["this.patientmodel(patientdto",{"_index":238,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientmodel.find",{"_index":234,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientmodel.findbyid(id",{"_index":235,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientmodel.findbyidanddelete(id",{"_index":236,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientmodel.findbyidandupdate",{"_index":240,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientservice.createpatient(patientdto",{"_index":191,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.patientservice.deletepatient(id",{"_index":189,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.patientservice.getpatient(id",{"_index":187,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.patientservice.getpatients",{"_index":185,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.patientservice.updatepatient(id",{"_index":193,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.professionalmodel(professionaldto",{"_index":299,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalmodel.find",{"_index":296,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalmodel.findbyid(id",{"_index":297,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalmodel.findbyidanddelete(id",{"_index":298,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalmodel.findbyidandupdate",{"_index":301,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalservice.createprofessional(professionaldto",{"_index":275,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.professionalservice.deleteprofessional(id",{"_index":274,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.professionalservice.getallprofessionals",{"_index":270,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.professionalservice.getprofessional(id",{"_index":272,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.professionalservice.updateprofessional(id",{"_index":276,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["thrown",{"_index":106,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["touch",{"_index":392,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":398,"title":{},"body":{"index.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/Address.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":409,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types.interface",{"_index":137,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{}}}],["types.interface.ts",{"_index":7,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":354,"title":{},"body":{"index.html":{}}}],["ui/patient.controller",{"_index":212,"title":{},"body":{"modules/PatientModule.html":{}}}],["ui/professional.controller",{"_index":282,"title":{},"body":{"modules/ProfessionalModule.html":{}}}],["unit",{"_index":369,"title":{},"body":{"index.html":{}}}],["updatepatient",{"_index":158,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["updatepatient(id",{"_index":228,"title":{},"body":{"injectables/PatientService.html":{}}}],["updatepatient(patientdto",{"_index":172,"title":{},"body":{"controllers/PatientController.html":{}}}],["updateprofessional",{"_index":254,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["updateprofessional(id",{"_index":293,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["updateprofessional(professionaldto",{"_index":263,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["usertype",{"_index":19,"title":{},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":414,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":101,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["watch",{"_index":364,"title":{},"body":{"index.html":{}}}],["website",{"_index":396,"title":{},"body":{"index.html":{}}}],["world",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":385,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/user-types.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        doorNumber\n                                \n                                \n                                        postalCode\n                                \n                                \n                                        streetName\n                                \n                                \n                                        streetNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        doorNumber\n                                    \n                                \n                                \n                                    \n                                        doorNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streetName\n                                    \n                                \n                                \n                                    \n                                        streetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streetNumber\n                                    \n                                \n                                \n                                    \n                                        streetNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type UserType = 'Patient' | 'Professional';\n\nexport type Gender = 'Male' | 'Female' | 'Other';\n\nexport interface Address {\n  streetName: string;\n  streetNumber: string;\n  doorNumber: string;\n  postalCode: string;\n  city: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nPatientModule\n\nPatientModule\n\nAppModule -->\n\nPatientModule->AppModule\n\n\n\n\n\nProfessionalModule\n\nProfessionalModule\n\nAppModule -->\n\nProfessionalModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            PatientModule\n                        \n                        \n                            ProfessionalModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PatientModule } from './patient/patient.module';\nimport { ProfessionalModule } from './professional/professional.module';\nimport { CommonModule } from './common/common.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [ConfigModule.forRoot(),\n    PatientModule,\n    ProfessionalModule,\n    CommonModule,\n  MongooseModule.forRoot(\n    `mongodb+srv://${process.env.USER}:${process.env.PASSWORD}@${process.env.HOST}?retryWrites=true&w=majority`\n  )\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExceptionsFilter.html":{"url":"classes/ExceptionsFilter.html","title":"class - ExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions-filter/exceptions-filter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions-filter/exceptions-filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Catch, ArgumentsHost, HttpStatus, Logger } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\n\n@Catch()\nexport class ExceptionsFilter extends BaseExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    Logger.error('Exception thrown: ', exception);\n\n    const response = host.switchToHttp().getResponse();\n\n    const message =\n      exception instanceof Error ? exception.message : exception.message.error;\n\n    let status = HttpStatus.INTERNAL_SERVER_ERROR;\n\n    if (exception.status === HttpStatus.BAD_GATEWAY) {\n      status = HttpStatus.BAD_GATEWAY;\n    }\n    if (exception.status === HttpStatus.BAD_REQUEST) {\n      status = HttpStatus.BAD_REQUEST;\n    }\n    if (exception.status === HttpStatus.CONFLICT) {\n      status = HttpStatus.CONFLICT;\n    }\n    if (exception.status === HttpStatus.EXPECTATION_FAILED) {\n      status = HttpStatus.EXPECTATION_FAILED;\n    }\n    if (exception.status === HttpStatus.FORBIDDEN) {\n      status = HttpStatus.FORBIDDEN;\n    }\n    if (exception.status === HttpStatus.NOT_ACCEPTABLE) {\n      status = HttpStatus.NOT_ACCEPTABLE;\n    }\n    if (exception.status === HttpStatus.NOT_FOUND) {\n      status = HttpStatus.NOT_FOUND;\n    }\n    if (exception.status === HttpStatus.REQUEST_TIMEOUT) {\n      status = HttpStatus.REQUEST_TIMEOUT;\n    }\n    if (exception.status === HttpStatus.SERVICE_UNAVAILABLE) {\n      status = HttpStatus.SERVICE_UNAVAILABLE;\n    }\n    if (exception.status === HttpStatus.UNAUTHORIZED) {\n      status = HttpStatus.UNAUTHORIZED;\n    }\n\n    response.status(status).json({\n      status,\n      success: false,\n      error: message,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InsuranceCompany.html":{"url":"interfaces/InsuranceCompany.html","title":"interface - InsuranceCompany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InsuranceCompany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/domain/models/patient.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cardNumber\n                                \n                                \n                                        insuranceCompanyName\n                                \n                                \n                                        insuranceType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardNumber\n                                    \n                                \n                                \n                                    \n                                        cardNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insuranceCompanyName\n                                    \n                                \n                                \n                                    \n                                        insuranceCompanyName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insuranceType\n                                    \n                                \n                                \n                                    \n                                        insuranceType:         InsuranceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InsuranceType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserType, Gender, Address } from '../../../common/interfaces/user-types.interface';\nimport { Document } from 'mongoose';\n\nexport interface Patient extends Document{\n    name: string;\n    firstSurname: string;\n    secondSurname: string;\n    gender: Gender;\n    birthDate: Date;\n    nif: string;\n    address: Address;\n    userType: UserType;\n    nhc: string;\n    insuranceList: InsuranceCompany[];\n}\n\nexport interface InsuranceCompany {\n    insuranceCompanyName: string;\n    insuranceType: InsuranceType;\n    cardNumber: string;\n}\n\nexport type InsuranceType = 'Dental' | 'Health' | 'Family';\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Patient.html":{"url":"interfaces/Patient.html","title":"interface - Patient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Patient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/domain/models/patient.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        birthDate\n                                \n                                \n                                        firstSurname\n                                \n                                \n                                        gender\n                                \n                                \n                                        insuranceList\n                                \n                                \n                                        name\n                                \n                                \n                                        nhc\n                                \n                                \n                                        nif\n                                \n                                \n                                        secondSurname\n                                \n                                \n                                        userType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                    \n                                \n                                \n                                    \n                                        birthDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstSurname\n                                    \n                                \n                                \n                                    \n                                        firstSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:         Gender\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Gender\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insuranceList\n                                    \n                                \n                                \n                                    \n                                        insuranceList:         InsuranceCompany[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InsuranceCompany[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nhc\n                                    \n                                \n                                \n                                    \n                                        nhc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nif\n                                    \n                                \n                                \n                                    \n                                        nif:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondSurname\n                                    \n                                \n                                \n                                    \n                                        secondSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userType\n                                    \n                                \n                                \n                                    \n                                        userType:         UserType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserType, Gender, Address } from '../../../common/interfaces/user-types.interface';\nimport { Document } from 'mongoose';\n\nexport interface Patient extends Document{\n    name: string;\n    firstSurname: string;\n    secondSurname: string;\n    gender: Gender;\n    birthDate: Date;\n    nif: string;\n    address: Address;\n    userType: UserType;\n    nhc: string;\n    insuranceList: InsuranceCompany[];\n}\n\nexport interface InsuranceCompany {\n    insuranceCompanyName: string;\n    insuranceType: InsuranceType;\n    cardNumber: string;\n}\n\nexport type InsuranceType = 'Dental' | 'Health' | 'Family';\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PatientController.html":{"url":"controllers/PatientController.html","title":"controller - PatientController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PatientController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/ui/patient.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                patients\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPatient\n                            \n                            \n                                deletePatient\n                            \n                            \n                                getPatient\n                            \n                            \n                                getPatients\n                            \n                            \n                                updatePatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPatient\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePatient(patientDto: PatientDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/patient/ui/patient.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientDto\n                                    \n                                                PatientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePatient\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePatient(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/patient/ui/patient.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPatient\n                        \n                        \n                    \n                \n            \n            \n                \ngetPatient(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/patient/ui/patient.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPatients\n                        \n                        \n                    \n                \n            \n            \n                \ngetPatients()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/patient/ui/patient.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePatient\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePatient(patientDto: PatientDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n            \n                \n                    Defined in src/patient/ui/patient.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientDto\n                                    \n                                                PatientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Delete, Post, Body, Put } from '@nestjs/common';\nimport { Patient } from '../domain/models/patient.interface';\nimport { PatientService } from '../app/service/patient.service';\nimport { PatientDto } from '../domain/dto/patient-dto';\n\n@Controller('patients')\nexport class PatientController {\n    constructor(private patientService: PatientService) { }\n\n    @Get()\n    getPatients(): Promise {\n        return this.patientService.getPatients();\n    }\n\n    @Get('/:id')\n    getPatient(@Param('id') id: string): Promise {\n        return this.patientService.getPatient(id);\n    }\n\n    @Delete('/:id')\n    deletePatient(@Param('id') id: string): Promise {\n        return this.patientService.deletePatient(id);\n    }\n\n    @Post()\n    createPatient(@Body() patientDto: PatientDto): Promise {\n        return this.patientService.createPatient(patientDto);\n    }\n\n    @Put('/:id')\n    updatePatient(\n        @Body() patientDto: PatientDto,\n        @Param('id') id: string): Promise {\n        return this.patientService.updatePatient(id, patientDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientDto.html":{"url":"classes/PatientDto.html","title":"class - PatientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/domain/dto/patient-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                address\n                            \n                            \n                                birthdate\n                            \n                            \n                                firstSurname\n                            \n                            \n                                gender\n                            \n                            \n                                InsuranceList\n                            \n                            \n                                name\n                            \n                            \n                                nhc\n                            \n                            \n                                nif\n                            \n                            \n                                secondSurname\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstSurname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gender\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InsuranceList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InsuranceCompany[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nhc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nif\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secondSurname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserType, Gender, Address } from '../../../common/interfaces/user-types.interface';\nimport { InsuranceCompany } from '../models/patient.interface'\n\nexport class PatientDto {\n    _id: string;\n    name: string;\n    firstSurname: string;\n    secondSurname: string;\n    gender: Gender;\n    birthdate: Date;\n    nif: string;\n    address: Address;\n    userType: UserType;\n    nhc: string;\n    InsuranceList: InsuranceCompany[]\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PatientModule.html":{"url":"modules/PatientModule.html","title":"module - PatientModule","body":"\n                   \n\n\n\n\n    Modules\n    PatientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PatientModule\n\n\n\ncluster_PatientModule_providers\n\n\n\n\nPatientService\n\nPatientService\n\n\n\nPatientModule\n\nPatientModule\n\nPatientModule -->\n\nPatientService->PatientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/patient/patient.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PatientService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PatientController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PatientController } from './ui/patient.controller';\nimport { PatientService } from './app/service/patient.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { patientSchema } from './infrastructure/mongodb/patient.schema'\n\n\n@Module({\n  imports:[MongooseModule.forFeature([{name: 'Patient', schema: patientSchema}])] ,\n  controllers: [PatientController],\n  providers: [PatientService]\n})\nexport class PatientModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientService.html":{"url":"injectables/PatientService.html","title":"injectable - PatientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/app/service/patient.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPatient\n                            \n                            \n                                    Async\n                                deletePatient\n                            \n                            \n                                    Async\n                                getPatient\n                            \n                            \n                                    Async\n                                getPatients\n                            \n                            \n                                    Async\n                                updatePatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(patientModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/patient/app/service/patient.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        patientModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createPatient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPatient(patientDto: PatientDto)\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientDto\n                                    \n                                                PatientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePatient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePatient(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPatient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPatient(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPatients\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPatients()\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePatient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePatient(id: string, patientDto: PatientDto)\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    patientDto\n                                    \n                                                PatientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PatientDto } from '../../domain/dto/patient-dto'\nimport { Patient } from '../../domain/models/patient.interface'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class PatientService {\n    constructor(@InjectModel('Patient') private patientModel: Model) { }\n\n    async getPatients(): Promise {\n        return await this.patientModel.find();\n    }\n\n    async getPatient(id: string): Promise {\n        return await this.patientModel.findById(id);\n    }\n\n    async deletePatient(id: string): Promise {\n        return await this.patientModel.findByIdAndDelete(id);\n    }\n\n    async createPatient(patientDto: PatientDto): Promise {\n        const patient = new this.patientModel(patientDto);\n        return await patient.save();\n    }\n\n    async updatePatient(id: string, patientDto: PatientDto): Promise {\n        return await this.patientModel.findByIdAndUpdate({ _id: id }, patientDto);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Professional.html":{"url":"interfaces/Professional.html","title":"interface - Professional","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Professional\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professional/domain/models/professional.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        birthdate\n                                \n                                \n                                        firstSurname\n                                \n                                \n                                        gender\n                                \n                                \n                                        medicalBoardNumber\n                                \n                                \n                                        name\n                                \n                                \n                                        nif\n                                \n                                \n                                        professionalType\n                                \n                                \n                                        secondSurname\n                                \n                                \n                                        userType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthdate\n                                    \n                                \n                                \n                                    \n                                        birthdate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstSurname\n                                    \n                                \n                                \n                                    \n                                        firstSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:         Gender\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Gender\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medicalBoardNumber\n                                    \n                                \n                                \n                                    \n                                        medicalBoardNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nif\n                                    \n                                \n                                \n                                    \n                                        nif:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        professionalType\n                                    \n                                \n                                \n                                    \n                                        professionalType:         ProfessionalType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProfessionalType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondSurname\n                                    \n                                \n                                \n                                    \n                                        secondSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userType\n                                    \n                                \n                                \n                                    \n                                        userType:         UserType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserType, Gender, Address } from '../../../common/interfaces/user-types.interface';\nimport { Document } from 'mongoose';\n\nexport interface Professional extends Document {\n    name: string;\n    firstSurname: string;\n    secondSurname: string;\n    gender: Gender;\n    birthdate: Date;\n    nif: string;\n    address: Address;\n    userType: UserType;\n    medicalBoardNumber: string;\n    professionalType: ProfessionalType;\n}\n\nexport type ProfessionalType = 'Doctor' | 'Nurse' | 'Administrator';\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfessionalController.html":{"url":"controllers/ProfessionalController.html","title":"controller - ProfessionalController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfessionalController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professional/ui/professional.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                professionals\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProfessional\n                            \n                            \n                                deleteProfessional\n                            \n                            \n                                getAllProfessionals\n                            \n                            \n                                getProfessional\n                            \n                            \n                                updateProfessional\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createProfessional\n                        \n                        \n                    \n                \n            \n            \n                \ncreateProfessional(professionalDto: ProfessionalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/professional/ui/professional.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    professionalDto\n                                    \n                                                ProfessionalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProfessional\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProfessional(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/professional/ui/professional.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllProfessionals\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllProfessionals()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/professional/ui/professional.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfessional\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfessional(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/professional/ui/professional.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateProfessional\n                        \n                        \n                    \n                \n            \n            \n                \nupdateProfessional(professionalDto: ProfessionalDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n            \n                \n                    Defined in src/professional/ui/professional.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    professionalDto\n                                    \n                                                ProfessionalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Controller, Get, Param, Delete, Post, Body, Put } from '@nestjs/common';\nimport { Professional } from '../domain/models/professional.interface';\nimport { ProfessionalService } from '../app/service/professional.service';\nimport { ProfessionalDto } from '../domain/dto/professional-dto';\n\n@Controller('professionals')\nexport class ProfessionalController {\n    constructor(private professionalService: ProfessionalService) { }\n\n    @Get()\n    getAllProfessionals(): Promise {\n        return this.professionalService.getAllProfessionals();\n    }\n\n    @Get('/:id')\n    getProfessional(@Param('id') id: string): Promise {\n        return this.professionalService.getProfessional(id);\n    }\n\n    @Delete('/:id')\n    deleteProfessional(@Param('id') id: string): Promise {\n        return this.professionalService.deleteProfessional(id);\n    }\n\n    @Post()\n    createProfessional(\n        @Body() professionalDto: ProfessionalDto,\n    ): Promise {\n        return this.professionalService.createProfessional(professionalDto);\n    }\n\n    @Put('/:id')\n    updateProfessional(\n        @Body() professionalDto: ProfessionalDto,\n        @Param('id') id: string,\n    ): Promise {\n        return this.professionalService.updateProfessional(id, professionalDto);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfessionalDto.html":{"url":"classes/ProfessionalDto.html","title":"class - ProfessionalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfessionalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professional/domain/dto/professional-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                address\n                            \n                            \n                                birthdate\n                            \n                            \n                                firstSurname\n                            \n                            \n                                gender\n                            \n                            \n                                medicalBoardNumber\n                            \n                            \n                                name\n                            \n                            \n                                nif\n                            \n                            \n                                professionalType\n                            \n                            \n                                secondSurname\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstSurname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gender\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            medicalBoardNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nif\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            professionalType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProfessionalType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secondSurname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserType, Gender, Address } from '../../../common/interfaces/user-types.interface';\nimport { ProfessionalType } from '../models/professional.interface'\n\nexport class ProfessionalDto {\n    _id: string;\n    name: string;\n    firstSurname: string;\n    secondSurname: string;\n    gender: Gender;\n    birthdate: Date;\n    nif: string;\n    address: Address;\n    userType: UserType;\n    medicalBoardNumber: string;\n    professionalType: ProfessionalType;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfessionalModule.html":{"url":"modules/ProfessionalModule.html","title":"module - ProfessionalModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfessionalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfessionalModule\n\n\n\ncluster_ProfessionalModule_providers\n\n\n\n\nProfessionalService\n\nProfessionalService\n\n\n\nProfessionalModule\n\nProfessionalModule\n\nProfessionalModule -->\n\nProfessionalService->ProfessionalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/professional/professional.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfessionalService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfessionalController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfessionalController } from './ui/professional.controller';\nimport { ProfessionalService } from './app/service/professional.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { professionalSchema } from './infrastructure/mongodb/professional.schema'\n@Module({\n  imports:[MongooseModule.forFeature([{name: 'Professional', schema: professionalSchema}])] ,\n  controllers: [ProfessionalController],\n  providers: [ProfessionalService]\n})\nexport class ProfessionalModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfessionalService.html":{"url":"injectables/ProfessionalService.html","title":"injectable - ProfessionalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfessionalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professional/app/service/professional.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfessional\n                            \n                            \n                                    Async\n                                deleteProfessional\n                            \n                            \n                                    Async\n                                getAllProfessionals\n                            \n                            \n                                    Async\n                                getProfessional\n                            \n                            \n                                    Async\n                                updateProfessional\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(professionalModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/professional/app/service/professional.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        professionalModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createProfessional\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfessional(professionalDto: ProfessionalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    professionalDto\n                                    \n                                                ProfessionalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProfessional\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfessional(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllProfessionals\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProfessionals()\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfessional\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfessional(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProfessional\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfessional(id: string, professionalDto: ProfessionalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    professionalDto\n                                    \n                                                ProfessionalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ProfessionalDto } from '../../domain/dto/professional-dto'\nimport { Professional } from '../../domain/models/professional.interface'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class ProfessionalService {\n\n    constructor(@InjectModel('Professional') private readonly professionalModel: Model) { }\n\n    async getAllProfessionals(): Promise {\n        const professionals = await this.professionalModel.find();\n        return professionals;\n    }\n\n    async getProfessional(id: string): Promise {\n        return await this.professionalModel.findById(id);\n    }\n\n    async deleteProfessional(id: string): Promise {\n        return await this.professionalModel.findByIdAndDelete(id);\n    }\n\n    async createProfessional(professionalDto: ProfessionalDto): Promise {\n        const professional = new this.professionalModel(professionalDto);\n        return await professional.save();\n    }\n\n    async updateProfessional(id: string, professionalDto: ProfessionalDto): Promise {\n        return await this.professionalModel.findByIdAndUpdate({ _id: id }, professionalDto);\n    }\n\n\n\n\n\n}\n\n//createProfessional\n//deleteProfessional\n//updateProfessional\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/exceptions-filter/exceptions-filter.ts\n            \n            class\n            ExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interfaces/user-types.interface.ts\n            \n            interface\n            Address\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patient/app/service/patient.service.ts\n            \n            injectable\n            PatientService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/patient/domain/dto/patient-dto.ts\n            \n            class\n            PatientDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/patient/domain/models/patient.interface.ts\n            \n            interface\n            InsuranceCompany\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patient/domain/models/patient.interface.ts\n            \n            interface\n            Patient\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/patient/infrastructure/mongodb/patient.schema.ts\n            \n            variable\n            patientSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patient/ui/patient.controller.ts\n            \n            controller\n            PatientController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/professional/app/service/professional.service.ts\n            \n            injectable\n            ProfessionalService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/professional/domain/dto/professional-dto.ts\n            \n            class\n            ProfessionalDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/professional/domain/models/professional.interface.ts\n            \n            interface\n            Professional\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/professional/infrastructure/mongodb/professional.schema.ts\n            \n            variable\n            professionalSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/professional/ui/professional.controller.ts\n            \n            controller\n            ProfessionalController\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            mongoose : ^5.9.25\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PatientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfessionalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_PatientModule\n\n\n\ncluster_PatientModule_providers\n\n\n\ncluster_ProfessionalModule\n\n\n\ncluster_ProfessionalModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nPatientModule\n\nPatientModule\n\nAppModule -->\n\nPatientModule->AppModule\n\n\n\n\n\nProfessionalModule\n\nProfessionalModule\n\nAppModule -->\n\nProfessionalModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nPatientModule -->\n\nPatientService->PatientModule\n\n\n\n\n\nProfessionalService\n\nProfessionalService\n\nProfessionalModule -->\n\nProfessionalService->ProfessionalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Gender   (src/.../user-types.interface.ts)\n                        \n                        \n                            InsuranceType   (src/.../patient.interface.ts)\n                        \n                        \n                            ProfessionalType   (src/.../professional.interface.ts)\n                        \n                        \n                            UserType   (src/.../user-types.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/interfaces/user-types.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Gender\n                \n            \n            \n                \n                        \"Male\" | \"Female\" | \"Other\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserType\n                \n            \n            \n                \n                        \"Patient\" | \"Professional\"\n\n                \n            \n        \n    \n    src/patient/domain/models/patient.interface.ts\n    \n    \n        \n            \n                \n                    \n                    InsuranceType\n                \n            \n            \n                \n                        \"Dental\" | \"Health\" | \"Family\"\n\n                \n            \n        \n    \n    src/professional/domain/models/professional.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ProfessionalType\n                \n            \n            \n                \n                        \"Doctor\" | \"Nurse\" | \"Administrator\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            patientSchema   (src/.../patient.schema.ts)\n                        \n                        \n                            professionalSchema   (src/.../professional.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/patient/infrastructure/mongodb/patient.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            patientSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    name: String,\n    firstSurname: String,\n    secondSurname: String,\n    gender: String,\n    birthDate: Date,\n    nif: String,\n    userType: String,\n    address: {\n        street: String,\n        streetNumber: String,\n        doorNumber: String,\n        postalCode: String,\n        city: String,\n    },\n    nhc: String,\n    insuranceList: Array\n})\n                        \n                    \n\n\n            \n        \n\n    src/professional/infrastructure/mongodb/professional.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            professionalSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    name: String,\n    firstSurname: String,\n    secondSurname: String,\n    gender: String,\n    birthDate: Date,\n    nif: String,\n    userType: String,\n    address: {\n        street: String,\n        streetNumber: String,\n        doorNumber: String,\n        postalCode: String,\n        city: String,\n    },\n    medicalBoardNumber: String,\n    professionalType: String\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
