var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/Address.html",[0,1.062,1,1.423]],["body/interfaces/Address.html",[0,1.157,1,2.055,2,1.814,3,0.283,4,0.246,5,0.246,6,2.666,7,2.666,8,0.361,9,1.772,10,4.82,11,4.82,12,4.82,13,5.725,14,4.82,15,1.379,16,0.848,17,0.027,18,0.421,19,1.674,20,1.55,21,1.674,22,1.674,23,3.042,24,3.042,25,0.015,26,0.02,27,0.015]],["title/controllers/AppController.html",[28,1.227,29,2.19]],["body/controllers/AppController.html",[3,0.322,4,0.28,5,0.28,8,0.412,15,1.076,17,0.028,18,0.322,25,0.017,26,0.021,27,0.017,28,1.927,29,3.44,30,1.521,31,3.463,32,1.793,33,5.064,34,2.247,35,0.987,36,4.113,37,1.415,38,0.643,39,0.849,40,3.125,41,3.463,42,0.28,43,2.065,44,3.035,45,1.521,46,4.113]],["title/modules/AppModule.html",[47,1.062,48,2.19]],["body/modules/AppModule.html",[3,0.222,4,0.193,5,0.193,17,0.028,18,0.222,25,0.012,26,0.017,27,0.012,29,3.126,30,1.501,38,0.763,39,0.586,40,3.106,41,2.391,42,0.193,47,1.516,48,4.29,49,1.218,50,1.316,51,1.551,52,1.551,53,1.316,54,2.587,55,1.551,56,2.391,57,2.391,58,2.391,59,3.4,60,3.4,61,3.4,62,3.4,63,3.106,64,2.217,65,1.551,66,1.551,67,2.839,68,2.427,69,2.839,70,2.839,71,2.839,72,2.839,73,1.874,74,1.316,75,2.839,76,2.391,77,2.839,78,2.391,79,2.839,80,2.839,81,2.839]],["title/injectables/AppService.html",[40,1.813,82,1.062]],["body/injectables/AppService.html",[3,0.34,4,0.295,5,0.295,8,0.434,15,1.113,17,0.027,18,0.34,25,0.018,26,0.022,27,0.018,32,1.854,33,5.163,35,1.041,37,1.493,38,0.536,39,0.896,40,2.945,42,0.295,45,1.605,82,1.726,83,2.179,84,3.655,85,4.341,86,4.341,87,4.341]],["title/controllers/AuthController.html",[28,1.227,88,2.19]],["body/controllers/AuthController.html",[3,0.266,4,0.231,5,0.231,8,0.34,16,0.462,17,0.028,18,0.266,25,0.023,26,0.019,27,0.014,28,1.257,30,1.257,32,1.582,34,1.857,35,0.815,37,1.169,38,0.689,39,0.702,42,0.231,43,1.707,45,1.257,88,3.036,89,2.862,90,2.244,91,3.399,92,2.848,93,3.873,94,2.862,95,3.598,96,3.441,97,3.399,98,1.353,99,0.702,100,1.353,101,2.131,102,2.244,103,3.399,104,2.862,105,1.857,106,3.873,107,1.257,108,1.973,109,2.617,110,2.862,111,2.033,112,2.033,113,3.399,114,3.399,115,1.857,116,3.399,117,3.399]],["title/modules/AuthModule.html",[47,1.062,59,1.984]],["body/modules/AuthModule.html",[3,0.241,4,0.209,5,0.209,17,0.028,18,0.241,25,0.013,26,0.018,27,0.013,30,1.587,38,0.754,39,0.634,42,0.209,47,1.583,49,1.318,50,1.423,51,1.678,52,1.678,53,1.423,54,2.701,55,1.678,59,3.758,63,3.187,64,2.344,65,1.678,66,1.678,68,2.566,78,2.587,88,3.264,109,2.928,110,2.587,118,2.587,119,3.072,120,2.587,121,3.488,122,3.072,123,3.072,124,1.423,125,2.587,126,2.028,127,1.318,128,3.072,129,2.267,130,3.072,131,2.028,132,2.028,133,1.542,134,1.837,135,1.837,136,3.072,137,3.072,138,2.587,139,3.072,140,2.267,141,2.587]],["title/injectables/AuthService.html",[82,1.062,109,1.666]],["body/injectables/AuthService.html",[3,0.186,4,0.161,5,0.161,8,0.237,16,0.579,17,0.028,18,0.186,25,0.017,26,0.015,27,0.01,32,1.223,35,1.137,37,1.468,38,0.702,39,0.489,42,0.161,43,1.19,45,1.578,82,1.139,83,1.19,92,2.914,93,2.994,94,2.994,95,3.038,98,1.887,99,0.979,100,1.887,101,1.648,105,1.295,106,1.996,107,1.972,108,1.83,109,1.785,111,2.552,112,1.418,115,2.331,124,2.471,125,1.996,129,1.749,133,1.785,140,1.749,141,1.996,142,1.996,143,3.556,144,4.267,145,1.418,146,2.371,147,5.531,148,2.371,149,3.556,150,2.371,151,2.371,152,3.556,153,2.835,154,2.371,155,1.996,156,3.556,157,3.593,158,2.371,159,2.624,160,1.565,161,2.371,162,1.565,163,2.371,164,3.148,165,2.142,166,3.556,167,2.371,168,2.371,169,2.371,170,1.996,171,1.19,172,2.371,173,1.418,174,2.371,175,2.371,176,1.996,177,2.371,178,2.371,179,2.371]],["title/modules/CommonModule.html",[47,1.062,60,1.984]],["body/modules/CommonModule.html",[3,0.376,4,0.326,5,0.326,17,0.027,18,0.376,25,0.02,26,0.023,27,0.02,38,0.592,39,0.991,42,0.326,47,1.835,49,2.059,60,3.427,180,4.8]],["title/classes/ExceptionsFilter.html",[42,0.226,181,2.448]],["body/classes/ExceptionsFilter.html",[3,0.202,4,0.175,5,0.175,8,0.258,16,0.35,17,0.028,18,0.202,25,0.011,26,0.015,27,0.011,32,1.301,35,0.618,37,0.886,38,0.467,39,0.532,42,0.175,98,1.025,99,0.532,100,1.025,104,2.169,105,1.407,112,1.541,135,1.541,181,2.791,182,1.293,183,3.184,184,3.184,185,2.169,186,2.066,187,4.481,188,4.158,189,3.782,190,4.481,191,4.938,192,2.576,193,4.481,194,2.576,195,2.169,196,2.576,197,2.576,198,2.262,199,2.576,200,4.481,201,2.576,202,3.184,203,2.576,204,2.576,205,6.201,206,2.576,207,6.046,208,3.782,209,3.782,210,3.782,211,3.782,212,3.782,213,3.782,214,3.782,215,3.782,216,3.782,217,3.782,218,2.576,219,2.576,220,2.576,221,2.576,222,2.576]],["title/interfaces/InsuranceCompany.html",[0,1.062,223,1.984]],["body/interfaces/InsuranceCompany.html",[0,1.477,1,2.241,2,1.713,3,0.267,4,0.232,5,0.232,8,0.341,9,1.705,15,1.336,16,0.76,17,0.027,18,0.409,19,2.42,20,1.464,22,2.42,25,0.014,26,0.019,27,0.014,38,0.569,99,0.704,186,1.864,223,3.124,224,2.253,225,4.711,226,4.711,227,4.621,228,2.041,229,2.041,230,3.044,231,1.581,232,1.864,233,1.864,234,1.864,235,1.864,236,1.864,237,2.253,238,2.253,239,2.518,240,2.518,241,2.518]],["title/interfaces/JwtPayLoad.html",[0,1.062,153,1.984]],["body/interfaces/JwtPayLoad.html",[0,1.479,2,2.319,3,0.362,4,0.314,5,0.314,8,0.462,9,2.071,15,1.156,16,0.627,17,0.026,18,0.362,25,0.019,26,0.023,27,0.019,153,3.349,171,3.026,242,3.89,243,2.319,244,4.62]],["title/injectables/JwtStrategy.html",[82,1.062,121,1.984]],["body/injectables/JwtStrategy.html",[3,0.248,4,0.215,5,0.215,8,0.316,16,0.594,17,0.028,18,0.248,25,0.013,26,0.018,27,0.013,32,1.506,35,1.05,37,1.088,38,0.702,39,0.653,42,0.215,43,1.588,45,1.169,82,1.402,83,1.588,92,2.743,98,1.742,99,0.904,100,1.742,105,1.728,107,1.857,108,1.356,109,2.955,115,1.728,121,3.003,127,1.356,133,1.588,138,2.662,145,1.891,153,3.241,155,2.662,157,3.686,164,2.333,165,1.588,186,1.728,198,1.891,245,2.662,246,5.021,247,3.162,248,3.162,249,4.378,250,3.162,251,3.162,252,3.162,253,3.162,254,2.662,255,3.162,256,3.162,257,3.162,258,3.162,259,3.162,260,3.162,261,3.162,262,3.162,263,3.162,264,3.162,265,3.162]],["title/classes/LoginResponse.html",[42,0.226,111,1.984]],["body/classes/LoginResponse.html",[3,0.335,4,0.291,5,0.291,8,0.428,9,1.975,15,1.259,16,0.725,17,0.026,18,0.335,25,0.018,26,0.022,27,0.018,35,1.281,42,0.291,111,3.194,112,3.483,140,4.297,160,3.844,176,4.903,182,2.147,243,2.147,266,3.6,267,3.6]],["title/classes/LoginUserDto.html",[42,0.226,95,1.984]],["body/classes/LoginUserDto.html",[3,0.327,4,0.284,5,0.284,8,0.417,9,1.945,15,1.248,16,0.714,17,0.026,18,0.327,25,0.017,26,0.022,27,0.017,35,1.262,42,0.284,44,4.696,95,3.145,107,2.13,160,3.801,171,2.891,182,2.095,243,2.095,266,3.513,267,3.513,268,3.444]],["title/interfaces/Patient.html",[0,1.062,20,1.423]],["body/interfaces/Patient.html",[0,1.299,1,2.567,2,1.426,3,0.222,4,0.193,5,0.193,8,0.284,9,1.501,15,1.348,16,0.849,17,0.027,18,0.371,19,2.773,20,1.741,22,2.773,25,0.012,26,0.017,27,0.012,38,0.501,99,1.067,186,2.217,223,3.09,224,1.874,225,2.391,226,2.391,227,3.494,228,1.698,229,1.698,230,3.126,231,1.316,232,2.823,233,2.823,234,2.823,235,2.587,236,2.823,237,3.411,238,3.411,239,2.095,240,2.095,241,2.095]],["title/controllers/PatientController.html",[28,1.227,269,2.19]],["body/controllers/PatientController.html",[3,0.19,4,0.165,5,0.165,8,0.243,15,1.208,16,0.651,17,0.028,18,0.19,20,1.04,25,0.01,26,0.015,27,0.01,28,0.896,30,0.896,32,1.244,34,2.802,35,1.23,37,1.764,38,0.633,39,0.5,42,0.165,43,1.217,45,1.896,90,1.6,96,2.854,98,1.908,99,0.99,100,1.908,101,2.761,102,2.387,108,1.04,127,1.04,173,3.332,269,2.387,270,2.041,271,2.424,272,3.044,273,3.044,274,3.044,275,4.036,276,3.641,277,2.041,278,3.662,279,2.424,280,2.041,281,3.044,282,2.424,283,2.041,284,3.044,285,2.424,286,2.424,287,2.424,288,3.044,289,2.424,290,2.041,291,2.041,292,2.041,293,1.789,294,2.041,295,2.362,296,2.041,297,2.041,298,1.789,299,2.424,300,1.789,301,2.424,302,2.424,303,2.424,304,2.424,305,2.424,306,2.424,307,2.424,308,2.041,309,2.424]],["title/classes/PatientDto.html",[42,0.226,278,1.984]],["body/classes/PatientDto.html",[1,2.444,3,0.224,4,0.194,5,0.194,8,0.286,9,1.508,15,1.306,16,0.851,17,0.027,18,0.224,19,2.64,22,2.64,25,0.012,26,0.017,27,0.012,35,1.503,38,0.503,42,0.194,99,0.981,182,1.435,223,2.843,228,1.709,229,1.709,232,2.597,233,2.597,234,2.597,235,2.228,236,2.597,237,3.138,238,3.138,243,1.435,278,2.438,310,5.326,311,3.138,312,2.109,313,2.406,314,2.406,315,2.109,316,2.406,317,2.406,318,2.406,319,2.406,320,2.406,321,2.406,322,2.406,323,2.858]],["title/modules/PatientModule.html",[47,1.062,61,1.984]],["body/modules/PatientModule.html",[3,0.271,4,0.235,5,0.235,17,0.028,18,0.271,20,1.481,25,0.014,26,0.019,27,0.014,30,1.719,38,0.746,39,0.713,42,0.235,47,1.683,49,1.481,50,1.6,51,1.887,52,1.887,53,1.6,54,2.871,55,1.887,61,3.614,64,2.54,65,1.887,66,1.887,68,2.065,73,2.28,74,1.6,99,0.713,126,2.28,127,1.481,131,2.28,132,2.28,133,1.734,134,2.065,135,2.065,269,3.469,295,3.302,296,2.908,324,2.908,325,2.908,326,3.454,327,3.454,328,3.43,329,3.454,330,2.548,331,2.548]],["title/injectables/PatientService.html",[82,1.062,295,1.813]],["body/injectables/PatientService.html",[3,0.186,4,0.161,5,0.161,8,0.237,15,1.201,16,0.69,17,0.028,18,0.186,20,1.525,25,0.01,26,0.015,27,0.01,32,1.223,35,1.28,37,1.747,38,0.627,39,0.489,42,0.161,45,1.878,74,1.098,82,1.139,83,1.19,92,3.428,98,2.021,99,1.049,100,2.021,101,2.746,108,1.017,115,2.775,145,1.418,162,1.565,165,1.19,173,2.835,198,1.418,231,1.098,272,2.994,273,2.994,274,2.994,275,3.992,276,2.994,277,2.994,278,3.645,280,2.994,283,2.994,294,1.996,295,1.943,297,1.996,311,1.565,332,1.996,333,2.371,334,3.498,335,2.371,336,3.556,337,2.371,338,2.371,339,2.371,340,2.371,341,3.556,342,2.371,343,1.749,344,2.371,345,2.371,346,2.371,347,2.371,348,2.371,349,2.371,350,2.371]],["title/interfaces/Professional.html",[0,1.062,21,1.537]],["body/interfaces/Professional.html",[0,0.94,1,2.59,2,1.474,3,0.23,4,0.2,5,0.2,8,0.294,9,1.537,15,1.341,16,0.855,17,0.027,18,0.326,19,2.797,21,1.926,22,2.797,25,0.012,26,0.017,27,0.012,38,0.513,99,1.083,186,2.271,228,1.756,229,1.756,230,3.184,231,1.36,232,2.866,233,2.866,234,2.866,235,2.636,236,2.866,351,2.166,352,3.871,353,3.985,354,2.472,355,2.472,356,2.472]],["title/controllers/ProfessionalController.html",[28,1.227,357,2.19]],["body/controllers/ProfessionalController.html",[3,0.188,4,0.164,5,0.164,8,0.241,15,1.206,16,0.648,17,0.028,18,0.188,21,1.114,25,0.01,26,0.015,27,0.01,28,0.889,30,0.889,32,1.236,34,2.792,35,1.226,37,1.758,38,0.631,39,0.496,42,0.164,43,1.207,45,1.89,90,1.587,96,2.84,98,1.9,99,0.985,100,1.9,101,2.755,102,2.84,108,1.031,127,1.031,173,3.323,281,3.025,284,3.025,288,3.025,290,2.024,291,2.024,292,2.024,293,1.774,298,1.774,300,1.774,308,2.024,357,2.372,358,2.024,359,2.024,360,3.623,361,3.025,362,4.019,363,3.025,364,3.623,365,2.024,366,3.656,367,2.404,368,2.024,369,2.404,370,2.404,371,2.024,372,2.404,373,2.404,374,2.404,375,2.024,376,2.351,377,2.024,378,2.024,379,2.404,380,2.404,381,2.404,382,2.404,383,2.404,384,2.404,385,2.404,386,2.404]],["title/classes/ProfessionalDto.html",[42,0.226,366,1.984]],["body/classes/ProfessionalDto.html",[1,2.444,3,0.224,4,0.194,5,0.194,8,0.286,9,1.508,15,1.306,16,0.851,17,0.027,18,0.224,19,2.64,22,2.64,25,0.012,26,0.017,27,0.012,35,1.503,38,0.503,42,0.194,99,0.981,182,1.435,228,1.709,229,1.709,232,2.597,233,2.597,234,2.597,235,2.228,236,2.597,243,1.435,311,3.138,312,2.109,313,2.406,314,2.406,315,2.109,316,2.406,317,2.406,318,2.406,319,2.406,320,2.406,321,2.406,322,2.406,352,3.507,353,3.761,366,2.438,387,5.326,388,2.858]],["title/modules/ProfessionalModule.html",[47,1.062,62,1.984]],["body/modules/ProfessionalModule.html",[3,0.271,4,0.235,5,0.235,17,0.028,18,0.271,21,1.6,25,0.014,26,0.019,27,0.014,30,1.719,38,0.746,39,0.713,42,0.235,47,1.683,49,1.481,50,1.6,51,1.887,52,1.887,53,1.6,54,2.871,55,1.887,62,3.614,64,2.54,65,1.887,66,1.887,68,2.065,73,2.28,74,1.6,99,0.713,126,2.28,127,1.481,131,2.28,132,2.28,133,1.734,134,2.065,135,2.065,330,2.548,331,2.548,357,3.469,376,3.302,377,2.908,389,2.908,390,2.908,391,3.454,392,3.454,393,3.43,394,3.454]],["title/injectables/ProfessionalService.html",[82,1.062,376,1.813]],["body/injectables/ProfessionalService.html",[3,0.182,4,0.158,5,0.158,8,0.232,15,1.194,16,0.683,17,0.028,18,0.182,21,1.621,25,0.01,26,0.014,27,0.01,32,1.203,35,1.269,37,1.731,38,0.621,39,0.479,42,0.158,44,1.712,45,1.861,74,1.075,82,1.12,83,1.165,92,3.415,98,2.003,99,1.039,100,2.003,101,2.731,108,0.995,115,2.749,145,1.387,162,1.531,165,1.165,173,2.804,198,2.092,231,1.075,311,1.531,334,3.46,343,1.712,359,2.945,360,3.546,361,3.546,362,3.948,363,2.945,364,3.546,365,2.945,366,3.628,368,2.945,371,2.945,375,1.953,376,1.911,378,1.953,395,1.953,396,2.32,397,2.32,398,3.498,399,2.32,400,2.32,401,2.32,402,2.32,403,3.498,404,2.32,405,2.32,406,2.32,407,2.32,408,2.32,409,2.32,410,2.32,411,2.32]],["title/classes/RegisterUserDto.html",[42,0.226,412,1.984]],["body/classes/RegisterUserDto.html",[3,0.315,4,0.273,5,0.273,8,0.402,9,1.898,15,1.231,16,0.697,17,0.027,18,0.315,25,0.016,26,0.021,27,0.016,34,2.805,35,1.232,38,0.496,42,0.273,107,2.092,171,2.841,182,2.017,243,2.017,268,3.384,312,2.964,315,2.964,412,3.07,413,4.764,414,6.162,415,3.382]],["title/interfaces/User.html",[0,1.062,107,1.227]],["body/interfaces/User.html",[0,1.349,2,2.115,3,0.33,4,0.287,5,0.287,8,0.422,9,1.957,15,1.317,16,0.719,17,0.027,18,0.33,25,0.017,26,0.022,27,0.017,38,0.52,107,1.957,171,3.046,186,2.891,230,3.818,231,1.952,268,3.628,416,3.547]],["title/controllers/UserController.html",[28,1.227,417,2.19]],["body/controllers/UserController.html",[3,0.253,4,0.22,5,0.22,8,0.324,16,0.439,17,0.028,18,0.253,25,0.013,26,0.018,27,0.013,28,1.196,30,1.196,32,1.529,34,2.429,35,1.066,37,1.529,38,0.708,39,0.667,42,0.22,43,1.623,45,1.644,90,2.134,96,3.353,98,1.287,99,0.667,100,1.287,101,2.06,102,2.934,105,1.767,107,1.196,108,1.387,124,2.354,127,1.387,170,3.743,293,2.386,298,2.386,300,2.386,412,3.544,417,2.934,418,2.722,419,3.233,420,4.606,421,4.277,422,3.233,423,3.233,424,2.722,425,3.233,426,3.233,427,2.722,428,2.722,429,3.233,430,2.722,431,3.233,432,3.233,433,3.233,434,3.233]],["title/injectables/UserService.html",[82,1.062,124,1.537]],["body/injectables/UserService.html",[3,0.19,4,0.165,5,0.165,8,0.243,15,0.894,16,0.588,17,0.028,18,0.19,25,0.01,26,0.015,27,0.01,32,1.246,35,1.152,37,1.49,38,0.664,39,0.502,42,0.165,45,1.34,74,1.126,82,1.16,83,1.22,92,3.2,98,1.724,99,0.894,100,1.724,101,2.494,105,1.328,107,1.602,108,1.043,115,2.941,124,1.679,134,2.59,145,1.454,159,2.673,162,1.605,164,2.673,165,2.175,171,2.41,188,2.047,198,2.167,202,2.047,231,1.126,268,1.454,334,3.542,343,1.794,412,3.07,420,4.042,421,3.051,424,3.051,427,2.047,435,2.047,436,3.623,437,2.431,438,2.431,439,3.623,440,3.623,441,2.431,442,2.431,443,2.431,444,3.623,445,2.431,446,2.431,447,2.431,448,2.431,449,2.431,450,2.431,451,2.431,452,2.431,453,3.623,454,2.431,455,2.431,456,2.431,457,2.431,458,2.431,459,2.431,460,2.431,461,2.431,462,2.431,463,2.431,464,2.431,465,2.431,466,2.431,467,2.431]],["title/modules/UsersModule.html",[47,1.062,63,1.813]],["body/modules/UsersModule.html",[3,0.258,4,0.224,5,0.224,17,0.028,18,0.258,25,0.014,26,0.018,27,0.014,30,1.665,38,0.736,39,0.68,42,0.224,47,1.643,49,1.413,50,1.527,51,1.8,52,1.8,53,1.527,54,2.803,55,2.803,63,3.333,64,2.46,65,1.8,66,1.8,68,1.971,73,2.175,74,1.527,99,0.68,107,1.219,124,3.005,126,2.175,127,1.413,131,2.175,132,2.175,133,1.654,134,1.971,135,1.971,330,2.431,331,2.431,417,3.387,428,2.774,468,2.774,469,2.774,470,2.774,471,3.295,472,3.295,473,3.323,474,3.295]],["title/coverage.html",[475,3.339]],["body/coverage.html",[0,1.738,1,1.067,5,0.169,6,1.835,7,1.835,16,0.338,17,0.027,20,1.067,21,1.152,25,0.01,26,0.015,27,0.01,28,1.917,29,1.642,31,2.094,40,1.359,42,0.369,53,1.152,82,1.738,84,2.094,88,1.642,89,2.094,95,1.487,107,1.623,109,1.249,111,1.487,112,1.487,121,1.487,124,1.152,142,2.094,153,1.487,160,2.433,165,1.249,181,1.835,183,2.094,184,2.094,185,2.094,223,1.487,224,2.433,242,2.094,243,2.725,245,2.094,269,1.642,270,2.094,278,1.487,295,1.359,310,2.094,328,1.835,332,2.094,351,1.835,357,1.642,358,2.094,366,1.487,376,1.359,387,2.094,393,1.835,395,2.094,412,1.487,413,2.094,416,2.094,417,1.642,418,2.094,435,2.094,473,1.835,475,1.835,476,2.487,477,2.487,478,2.487,479,6.653,480,5.183,481,3.685,482,5.429,483,4.39,484,2.094,485,2.487,486,4.855,487,3.685,488,3.685,489,2.487,490,3.685,491,2.094,492,4.39,493,2.094,494,2.094,495,2.487,496,2.487]],["title/dependencies.html",[50,1.849,497,2.773]],["body/dependencies.html",[17,0.028,25,0.016,26,0.021,27,0.016,39,0.818,50,1.835,74,1.835,76,3.335,127,1.699,129,2.923,133,1.989,159,2.923,195,3.335,231,1.835,254,4.284,415,3.335,430,4.284,498,5.621,499,3.962,500,5.088,501,3.962,502,3.962,503,3.962,504,3.962,505,3.962,506,3.962,507,3.962,508,3.962,509,3.962,510,3.962,511,3.962,512,3.962,513,3.962,514,3.962,515,3.962,516,3.962,517,3.962]],["title/miscellaneous/functions.html",[518,1.515,519,3.359]],["body/miscellaneous/functions.html",[8,0.503,17,0.024,25,0.021,26,0.024,27,0.021,53,2.894,484,4.23,518,2.744,519,4.23,520,5.023]],["title/index.html",[8,0.277,521,2.773,522,2.773]],["body/index.html",[4,0.227,17,0.027,25,0.014,26,0.019,27,0.014,475,2.46,523,3.333,524,3.333,525,4.539,526,3.333,527,3.333,528,3.333,529,3.333,530,3.333,531,3.333,532,3.333,533,3.333,534,3.333,535,3.333,536,5.161,537,3.333,538,3.333,539,3.333,540,3.333,541,6.12,542,3.333,543,3.333,544,3.333,545,5.981,546,3.333,547,3.333,548,4.539,549,3.333,550,3.333,551,3.333,552,3.333,553,4.539,554,4.539,555,3.333,556,3.333,557,3.333,558,4.539,559,4.539,560,3.333,561,3.333,562,3.333,563,3.333,564,3.333,565,2.807,566,3.333,567,3.333,568,3.333,569,3.333,570,3.333,571,3.333,572,3.333,573,3.333,574,3.333,575,3.333,576,3.333,577,3.333,578,3.333,579,3.333,580,3.333,581,3.333,582,3.333,583,3.333]],["title/modules.html",[49,1.941]],["body/modules.html",[17,0.022,25,0.018,26,0.022,27,0.018,48,2.939,49,1.91,59,2.663,60,2.663,61,2.663,62,2.663,63,2.433,565,5.348,584,6.352,585,6.352,586,6.467,587,4.453,588,4.453]],["title/overview.html",[589,3.81]],["body/overview.html",[2,1.57,17,0.027,25,0.013,26,0.018,27,0.013,30,1.157,40,2.727,47,1.002,48,4.302,49,1.342,50,1.449,51,1.709,52,1.709,53,1.449,54,1.709,55,1.709,56,2.633,57,2.633,58,2.633,59,3.725,60,2.985,61,3.389,62,3.389,63,3.287,64,2.374,65,1.709,66,1.709,83,1.57,109,2.506,118,2.633,120,2.633,121,2.985,124,2.787,182,1.57,295,2.727,324,2.633,325,2.633,376,2.727,389,2.633,390,2.633,468,2.633,469,2.633,470,2.633,589,2.633,590,5.394,591,3.128]],["title/miscellaneous/typealiases.html",[518,1.515,592,3.99]],["body/miscellaneous/typealiases.html",[6,3.139,7,4.287,8,0.426,16,0.578,17,0.027,19,2.467,20,1.825,21,1.971,22,2.467,23,3.582,24,3.582,25,0.017,26,0.022,27,0.017,224,2.809,227,3.928,239,3.139,240,3.139,241,3.139,351,3.139,353,3.514,354,3.582,355,3.582,356,3.582,518,2.325,593,4.255,594,5.324,595,4.255,596,4.255]],["title/miscellaneous/variables.html",[518,1.515,597,3.359]],["body/miscellaneous/variables.html",[1,1.897,8,0.321,10,3.724,11,3.724,12,3.724,14,3.724,15,1.405,16,0.436,17,0.027,19,2.049,22,2.049,25,0.013,26,0.018,27,0.013,99,0.913,165,2.54,171,1.611,232,2.416,233,2.416,234,2.416,235,2.416,236,2.416,237,2.118,238,2.118,268,1.919,328,3.263,352,2.368,353,2.118,393,3.263,473,3.263,491,2.702,493,2.702,494,2.702,518,1.753,597,2.702,598,3.209,599,3.209,600,3.209,601,5.06,602,5.06,603,5.06,604,4.423,605,3.209,606,3.209,607,4.423,608,3.209]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":455,"title":{},"body":{"injectables/UserService.html":{}}}],["10s",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["11000",{"_index":462,"title":{},"body":{"injectables/UserService.html":{}}}],["3.0.2",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["4.5.12",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":591,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["5.9.25",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":590,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":311,"title":{},"body":{"classes/PatientDto.html":{},"injectables/PatientService.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{}}}],["address",{"_index":1,"title":{"interfaces/Address.html":{}},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["administrator",{"_index":356,"title":{},"body":{"interfaces/Professional.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":593,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":566,"title":{},"body":{"index.html":{}}}],["angular",{"_index":534,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":414,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["app",{"_index":543,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app/service/auth.service",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["app/service/patient.service",{"_index":296,"title":{},"body":{"controllers/PatientController.html":{},"modules/PatientModule.html":{}}}],["app/service/professional.service",{"_index":377,"title":{},"body":{"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{}}}],["app/service/user.service",{"_index":428,"title":{},"body":{"controllers/UserController.html":{},"modules/UsersModule.html":{}}}],["app/strategies/jwt.strategy",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":29,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":531,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":40,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":191,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["array",{"_index":605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/auth.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/domain/dto/payload",{"_index":256,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["authcontroller",{"_index":88,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":298,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":576,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":109,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":588,"title":{},"body":{"modules.html":{}}}],["await",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":567,"title":{},"body":{"index.html":{}}}],["badgatewayexception",{"_index":444,"title":{},"body":{"injectables/UserService.html":{}}}],["baseexceptionfilter",{"_index":187,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["bcrypt",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(loginuserdto.password",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(registeruserdto.password",{"_index":454,"title":{},"body":{"injectables/UserService.html":{}}}],["birthdate",{"_index":234,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":586,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":584,"title":{},"body":{"modules.html":{}}}],["building",{"_index":526,"title":{},"body":{"index.html":{}}}],["cardnumber",{"_index":225,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{}}}],["catch",{"_index":188,"title":{},"body":{"classes/ExceptionsFilter.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":189,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["checkpass",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["city",{"_index":10,"title":{},"body":{"interfaces/Address.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":42,"title":{"classes/ExceptionsFilter.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["classes",{"_index":182,"title":{},"body":{"classes/ExceptionsFilter.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_patientmodule",{"_index":324,"title":{},"body":{"modules/PatientModule.html":{},"overview.html":{}}}],["cluster_patientmodule_providers",{"_index":325,"title":{},"body":{"modules/PatientModule.html":{},"overview.html":{}}}],["cluster_professionalmodule",{"_index":389,"title":{},"body":{"modules/ProfessionalModule.html":{},"overview.html":{}}}],["cluster_professionalmodule_providers",{"_index":390,"title":{},"body":{"modules/ProfessionalModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":468,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":469,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":470,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["common/common.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["common/interfaces/user",{"_index":228,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{}}}],["commonmodule",{"_index":60,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["configmodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":445,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception(\"duplicated",{"_index":463,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":198,"title":{},"body":{"classes/ExceptionsFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["constructor(@injectmodel(\"user",{"_index":447,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(@injectmodel('patient",{"_index":344,"title":{},"body":{"injectables/PatientService.html":{}}}],["constructor(@injectmodel('professional",{"_index":405,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["constructor(authservice",{"_index":247,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(patientmodel",{"_index":333,"title":{},"body":{"injectables/PatientService.html":{}}}],["constructor(private",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UserController.html":{}}}],["constructor(professionalmodel",{"_index":396,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["constructor(usermodel",{"_index":437,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":28,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('patients",{"_index":299,"title":{},"body":{"controllers/PatientController.html":{}}}],["controller('professionals",{"_index":379,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["controller('register",{"_index":431,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PatientController.html":{},"modules/PatientModule.html":{},"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":475,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createjwtpayload",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["createjwtpayload(user",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["createpatient",{"_index":272,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["createpatient(@body",{"_index":306,"title":{},"body":{"controllers/PatientController.html":{}}}],["createpatient(patientdto",{"_index":277,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["createprofessional",{"_index":360,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["createprofessional(professionaldto",{"_index":365,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["data",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["date",{"_index":235,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"classes/RegisterUserDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["defined",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ExceptionsFilter.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":291,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["delete('/:id",{"_index":281,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["deletepatient",{"_index":273,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["deletepatient(@param('id",{"_index":304,"title":{},"body":{"controllers/PatientController.html":{}}}],["deletepatient(id",{"_index":280,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["deleteprofessional",{"_index":361,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["deleteprofessional(@param('id",{"_index":383,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["deleteprofessional(id",{"_index":368,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["dental",{"_index":239,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":50,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":535,"title":{},"body":{"index.html":{}}}],["development",{"_index":544,"title":{},"body":{"index.html":{}}}],["doctor",{"_index":354,"title":{},"body":{"interfaces/Professional.html":{},"miscellaneous/typealiases.html":{}}}],["document",{"_index":230,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"interfaces/Professional.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["domain/dto/login",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["domain/dto/patient",{"_index":297,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["domain/dto/payload",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/professional",{"_index":378,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["domain/dto/register",{"_index":427,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/models/patient.interface",{"_index":294,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["domain/models/professional.interface",{"_index":375,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["domain/models/user.interface",{"_index":446,"title":{},"body":{"injectables/UserService.html":{}}}],["doornumber",{"_index":11,"title":{},"body":{"interfaces/Address.html":{},"miscellaneous/variables.html":{}}}],["dto",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.ts",{"_index":243,"title":{},"body":{"interfaces/JwtPayLoad.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":314,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:11",{"_index":320,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:12",{"_index":313,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:13",{"_index":322,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:14",{"_index":319,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:15",{"_index":317,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:2",{"_index":266,"title":{},"body":{"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{}}}],["dto.ts:3",{"_index":267,"title":{},"body":{"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{}}}],["dto.ts:5",{"_index":312,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{}}}],["dto.ts:6",{"_index":318,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:7",{"_index":315,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{}}}],["dto.ts:8",{"_index":321,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["dto.ts:9",{"_index":316,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["e2e",{"_index":555,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":527,"title":{},"body":{"index.html":{}}}],["el",{"_index":263,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["email",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayLoad.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["email:string",{"_index":244,"title":{},"body":{"interfaces/JwtPayLoad.html":{}}}],["en",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["error",{"_index":202,"title":{},"body":{"classes/ExceptionsFilter.html":{},"injectables/UserService.html":{}}}],["error.code",{"_index":461,"title":{},"body":{"injectables/UserService.html":{}}}],["estaesmiphrassecreate",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["exception",{"_index":193,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.message",{"_index":203,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.message.error",{"_index":204,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.status",{"_index":207,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exceptionsfilter",{"_index":181,"title":{"classes/ExceptionsFilter.html":{}},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["expiresin",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LoginResponse.html":{}}}],["export",{"_index":18,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":430,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":186,"title":{},"body":{"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"injectables/JwtStrategy.html":{},"interfaces/Patient.html":{},"interfaces/Professional.html":{},"interfaces/User.html":{}}}],["extractjwt",{"_index":253,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":260,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"classes/ExceptionsFilter.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["family",{"_index":241,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"miscellaneous/typealiases.html":{}}}],["female",{"_index":24,"title":{},"body":{"interfaces/Address.html":{},"miscellaneous/typealiases.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["filter.ts",{"_index":185,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["filter.ts:6",{"_index":192,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["filter/exceptions",{"_index":184,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["finally",{"_index":464,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail",{"_index":436,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":440,"title":{},"body":{"injectables/UserService.html":{}}}],["firstsurname",{"_index":232,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":525,"title":{},"body":{"index.html":{}}}],["function",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":519,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":22,"title":{},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["get('/:id",{"_index":284,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["get()@useguards(undefined",{"_index":422,"title":{},"body":{"controllers/UserController.html":{}}}],["getallprofessionals",{"_index":362,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["getallusers",{"_index":420,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["gethello",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getpatient",{"_index":274,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["getpatient(@param('id",{"_index":302,"title":{},"body":{"controllers/PatientController.html":{}}}],["getpatient(id",{"_index":283,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["getpatients",{"_index":275,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["getprofessional",{"_index":363,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["getprofessional(@param('id",{"_index":381,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["getprofessional(id",{"_index":371,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["getting",{"_index":521,"title":{"index.html":{}},"body":{}}],["graph",{"_index":587,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":562,"title":{},"body":{"index.html":{}}}],["health",{"_index":240,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"miscellaneous/typealiases.html":{}}}],["heavily",{"_index":532,"title":{},"body":{"index.html":{}}}],["hello",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":573,"title":{},"body":{"index.html":{}}}],["host",{"_index":190,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["host.switchtohttp().getresponse",{"_index":199,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpexception",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":580,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"classes/ExceptionsFilter.html":{}}}],["httpstatus.bad_gateway",{"_index":208,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.bad_request",{"_index":209,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.conflict",{"_index":210,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.expectation_failed",{"_index":211,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.forbidden",{"_index":212,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":206,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.not_acceptable",{"_index":213,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.not_found",{"_index":214,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.request_timeout",{"_index":215,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.service_unavailable",{"_index":216,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.unauthorized",{"_index":217,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["id",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["identifier",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"injectables/JwtStrategy.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["infrastructure/mongodb/patient.schema",{"_index":329,"title":{},"body":{"modules/PatientModule.html":{}}}],["infrastructure/mongodb/professional.schema",{"_index":394,"title":{},"body":{"modules/ProfessionalModule.html":{}}}],["infrastructure/mongodb/user.schema",{"_index":474,"title":{},"body":{"modules/UsersModule.html":{}}}],["injectable",{"_index":82,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":343,"title":{},"body":{"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["inspired",{"_index":533,"title":{},"body":{"index.html":{}}}],["installation",{"_index":540,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":542,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":201,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["insurancecompany",{"_index":223,"title":{"interfaces/InsuranceCompany.html":{}},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"coverage.html":{}}}],["insurancecompanyname",{"_index":226,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{}}}],["insurancelist",{"_index":238,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"miscellaneous/variables.html":{}}}],["insurancetype",{"_index":227,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"miscellaneous/typealiases.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"interfaces/Patient.html":{},"interfaces/Professional.html":{},"interfaces/User.html":{}},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"interfaces/Patient.html":{},"interfaces/Professional.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"interfaces/Patient.html":{},"interfaces/Professional.html":{},"interfaces/User.html":{},"overview.html":{}}}],["join",{"_index":569,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":259,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":153,"title":{"interfaces/JwtPayLoad.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":121,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":577,"title":{},"body":{"index.html":{}}}],["legend",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":583,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":559,"title":{},"body":{"index.html":{}}}],["logger",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ExceptionsFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["logger.error('exception",{"_index":196,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["logger.error(error",{"_index":459,"title":{},"body":{"injectables/UserService.html":{}}}],["logger.log(\"creando",{"_index":262,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logger.log(\"entra",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log(\"entrando",{"_index":264,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logger.log(\"resultado",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger.log(data",{"_index":433,"title":{},"body":{"controllers/UserController.html":{}}}],["login",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(loginuserdto",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginresponse",{"_index":111,"title":{"classes/LoginResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponse.html":{},"coverage.html":{}}}],["loginuserdto",{"_index":95,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["male",{"_index":23,"title":{},"body":{"interfaces/Address.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":26,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medicalboardnumber",{"_index":352,"title":{},"body":{"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":200,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["metadata",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ExceptionsFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":518,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":558,"title":{},"body":{"index.html":{}}}],["mode",{"_index":548,"title":{},"body":{"index.html":{}}}],["model",{"_index":334,"title":{},"body":{"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["models/patient.interface",{"_index":323,"title":{},"body":{"classes/PatientDto.html":{}}}],["models/professional.interface",{"_index":388,"title":{},"body":{"classes/ProfessionalDto.html":{}}}],["module",{"_index":47,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":49,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb+srv://${process.env.user}:${process.env.password}@${process.env.host}?retrywrites=true&w=majority",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":231,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"injectables/ProfessionalService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":330,"title":{},"body":{"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":572,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":578,"title":{},"body":{"index.html":{}}}],["name",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"injectables/JwtStrategy.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":536,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":582,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":195,"title":{},"body":{"classes/ExceptionsFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"modules/PatientModule.html":{},"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":415,"title":{},"body":{"classes/RegisterUserDto.html":{},"dependencies.html":{}}}],["new",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nhc",{"_index":237,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"miscellaneous/variables.html":{}}}],["nif",{"_index":236,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":524,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["npm",{"_index":541,"title":{},"body":{"index.html":{}}}],["nurse",{"_index":355,"title":{},"body":{"interfaces/Professional.html":{},"miscellaneous/typealiases.html":{}}}],["open",{"_index":560,"title":{},"body":{"index.html":{}}}],["optional",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ExceptionsFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":589,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":497,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":290,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["param('id",{"_index":308,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["parameters",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ExceptionsFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["pass",{"_index":453,"title":{},"body":{"injectables/UserService.html":{}}}],["passport",{"_index":254,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["passportmodule.register",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":251,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":257,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":268,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patient",{"_index":20,"title":{"interfaces/Patient.html":{}},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["patient.save",{"_index":349,"title":{},"body":{"injectables/PatientService.html":{}}}],["patient/patient.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["patientcontroller",{"_index":269,"title":{"controllers/PatientController.html":{}},"body":{"controllers/PatientController.html":{},"modules/PatientModule.html":{},"coverage.html":{}}}],["patientdto",{"_index":278,"title":{"classes/PatientDto.html":{}},"body":{"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"coverage.html":{}}}],["patientmodel",{"_index":336,"title":{},"body":{"injectables/PatientService.html":{}}}],["patientmodule",{"_index":61,"title":{"modules/PatientModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules.html":{},"overview.html":{}}}],["patients",{"_index":271,"title":{},"body":{"controllers/PatientController.html":{}}}],["patientschema",{"_index":328,"title":{},"body":{"modules/PatientModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patientservice",{"_index":295,"title":{"injectables/PatientService.html":{}},"body":{"controllers/PatientController.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"coverage.html":{},"overview.html":{}}}],["payload",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["please",{"_index":570,"title":{},"body":{"index.html":{}}}],["post",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UserController.html":{}}}],["postalcode",{"_index":12,"title":{},"body":{"interfaces/Address.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UserController.html":{}}}],["private",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["production",{"_index":550,"title":{},"body":{"index.html":{}}}],["professional",{"_index":21,"title":{"interfaces/Professional.html":{}},"body":{"interfaces/Address.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["professional.save",{"_index":410,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["professional/professional.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["professionalcontroller",{"_index":357,"title":{"controllers/ProfessionalController.html":{}},"body":{"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"coverage.html":{}}}],["professionaldto",{"_index":366,"title":{"classes/ProfessionalDto.html":{}},"body":{"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{}}}],["professionalmodel",{"_index":398,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["professionalmodule",{"_index":62,"title":{"modules/ProfessionalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfessionalModule.html":{},"modules.html":{},"overview.html":{}}}],["professionals",{"_index":359,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["professionalschema",{"_index":393,"title":{},"body":{"modules/ProfessionalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["professionalservice",{"_index":376,"title":{"injectables/ProfessionalService.html":{}},"body":{"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{},"overview.html":{}}}],["professionaltype",{"_index":353,"title":{},"body":{"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":523,"title":{},"body":{"index.html":{}}}],["project",{"_index":561,"title":{},"body":{"index.html":{}}}],["promise",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["put",{"_index":292,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["put('/:id",{"_index":288,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["read",{"_index":571,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"classes/LoginUserDto.html":{},"injectables/ProfessionalService.html":{}}}],["reflect",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":419,"title":{},"body":{"controllers/UserController.html":{}}}],["registeruser",{"_index":421,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["registeruser(registeruserdto",{"_index":424,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["registeruserdto",{"_index":412,"title":{"classes/RegisterUserDto.html":{}},"body":{"classes/RegisterUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["registeruserdto.email",{"_index":457,"title":{},"body":{"injectables/UserService.html":{}}}],["repository",{"_index":539,"title":{},"body":{"index.html":{}}}],["req",{"_index":426,"title":{},"body":{"controllers/UserController.html":{}}}],["request",{"_index":429,"title":{},"body":{"controllers/UserController.html":{}}}],["required",{"_index":608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ExceptionsFilter.html":{},"classes/LoginResponse.html":{},"coverage.html":{}}}],["response.status(status).json",{"_index":218,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["result",{"_index":25,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.password",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":27,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ExceptionsFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":545,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":528,"title":{},"body":{"index.html":{}}}],["schema",{"_index":331,"title":{},"body":{"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["secondsurname",{"_index":233,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":261,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretorprivatekey",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["server",{"_index":529,"title":{},"body":{"index.html":{}}}],["service/auth.service",{"_index":255,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["session",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["session.aborttransaction",{"_index":460,"title":{},"body":{"injectables/UserService.html":{}}}],["session.committransaction",{"_index":458,"title":{},"body":{"injectables/UserService.html":{}}}],["session.endsession",{"_index":465,"title":{},"body":{"injectables/UserService.html":{}}}],["session.starttransaction",{"_index":452,"title":{},"body":{"injectables/UserService.html":{}}}],["side",{"_index":530,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["something",{"_index":220,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["sponsors",{"_index":564,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":520,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../patient.interface.ts",{"_index":595,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../patient.schema.ts",{"_index":598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../professional.interface.ts",{"_index":596,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../professional.schema.ts",{"_index":599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":594,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.schema.ts",{"_index":600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/app/service/auth.service.ts",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/app/service/auth.service.ts:11",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/app/service/auth.service.ts:15",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/app/service/auth.service.ts:23",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/app/service/auth.service.ts:36",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/app/strategies/jwt.strategy.ts",{"_index":245,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/app/strategies/jwt.strategy.ts:10",{"_index":248,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/app/strategies/jwt.strategy.ts:20",{"_index":250,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/auth.module.ts",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/domain/dto/login",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/auth/domain/dto/payload",{"_index":242,"title":{},"body":{"interfaces/JwtPayLoad.html":{},"coverage.html":{}}}],["src/auth/ui/auth.controller.ts",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/ui/auth.controller.ts:11",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/common/common.module.ts",{"_index":180,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/exceptions",{"_index":183,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/interfaces/user",{"_index":6,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/main.ts",{"_index":484,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/patient/app/service/patient.service.ts",{"_index":332,"title":{},"body":{"injectables/PatientService.html":{},"coverage.html":{}}}],["src/patient/app/service/patient.service.ts:11",{"_index":340,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:15",{"_index":339,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:19",{"_index":338,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:23",{"_index":337,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:28",{"_index":342,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:8",{"_index":335,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/domain/dto/patient",{"_index":310,"title":{},"body":{"classes/PatientDto.html":{},"coverage.html":{}}}],["src/patient/domain/models/patient.interface.ts",{"_index":224,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/patient/infrastructure/mongodb/patient.schema.ts",{"_index":491,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/patient/patient.module.ts",{"_index":326,"title":{},"body":{"modules/PatientModule.html":{}}}],["src/patient/ui/patient.controller.ts",{"_index":270,"title":{},"body":{"controllers/PatientController.html":{},"coverage.html":{}}}],["src/patient/ui/patient.controller.ts:13",{"_index":286,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patient/ui/patient.controller.ts:18",{"_index":285,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patient/ui/patient.controller.ts:23",{"_index":282,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patient/ui/patient.controller.ts:28",{"_index":279,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patient/ui/patient.controller.ts:33",{"_index":289,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/professional/app/service/professional.service.ts",{"_index":395,"title":{},"body":{"injectables/ProfessionalService.html":{},"coverage.html":{}}}],["src/professional/app/service/professional.service.ts:12",{"_index":401,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:17",{"_index":402,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:21",{"_index":400,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:25",{"_index":399,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:30",{"_index":404,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:8",{"_index":397,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/domain/dto/professional",{"_index":387,"title":{},"body":{"classes/ProfessionalDto.html":{},"coverage.html":{}}}],["src/professional/domain/models/professional.interface.ts",{"_index":351,"title":{},"body":{"interfaces/Professional.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/professional/infrastructure/mongodb/professional.schema.ts",{"_index":493,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/professional/professional.module.ts",{"_index":391,"title":{},"body":{"modules/ProfessionalModule.html":{}}}],["src/professional/ui/professional.controller.ts",{"_index":358,"title":{},"body":{"controllers/ProfessionalController.html":{},"coverage.html":{}}}],["src/professional/ui/professional.controller.ts:14",{"_index":370,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/professional/ui/professional.controller.ts:19",{"_index":372,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/professional/ui/professional.controller.ts:24",{"_index":369,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/professional/ui/professional.controller.ts:29",{"_index":367,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/professional/ui/professional.controller.ts:36",{"_index":374,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/users/app/service/user.service",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["src/users/app/service/user.service.ts",{"_index":435,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/app/service/user.service.ts:14",{"_index":443,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/app/service/user.service.ts:34",{"_index":441,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/app/service/user.service.ts:38",{"_index":442,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/app/service/user.service.ts:9",{"_index":438,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/domain/dto/register",{"_index":413,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/users/domain/models/user.interface",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/domain/models/user.interface.ts",{"_index":416,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/users/infrastructure/mongodb/user.schema.ts",{"_index":494,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/ui/user.controller.ts",{"_index":418,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/users/ui/user.controller.ts:14",{"_index":425,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/ui/user.controller.ts:23",{"_index":423,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/users.module.ts",{"_index":471,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":546,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":549,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":551,"title":{},"body":{"index.html":{}}}],["started",{"_index":522,"title":{"index.html":{}},"body":{}}],["starter",{"_index":538,"title":{},"body":{"index.html":{}}}],["statements",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":205,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["stay",{"_index":574,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":252,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["street",{"_index":604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["streetname",{"_index":13,"title":{},"body":{"interfaces/Address.html":{}}}],["streetnumber",{"_index":14,"title":{},"body":{"interfaces/Address.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":219,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["super",{"_index":258,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":565,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":585,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":554,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":557,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":556,"title":{},"body":{"index.html":{}}}],["tests",{"_index":553,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":563,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(loginuserdto",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuserbyjwt(payload",{"_index":265,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.createjwtpayload(result",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(data",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.patientmodel(patientdto",{"_index":348,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientmodel.find",{"_index":345,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientmodel.findbyid(id",{"_index":346,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientmodel.findbyidanddelete(id",{"_index":347,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientmodel.findbyidandupdate",{"_index":350,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientservice.createpatient(patientdto",{"_index":307,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.patientservice.deletepatient(id",{"_index":305,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.patientservice.getpatient(id",{"_index":303,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.patientservice.getpatients",{"_index":301,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.patientservice.updatepatient(id",{"_index":309,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.professionalmodel(professionaldto",{"_index":409,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalmodel.find",{"_index":406,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalmodel.findbyid(id",{"_index":407,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalmodel.findbyidanddelete(id",{"_index":408,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalmodel.findbyidandupdate",{"_index":411,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalservice.createprofessional(professionaldto",{"_index":385,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.professionalservice.deleteprofessional(id",{"_index":384,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.professionalservice.getallprofessionals",{"_index":380,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.professionalservice.getprofessional(id",{"_index":382,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.professionalservice.updateprofessional(id",{"_index":386,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.usermodel(registeruserdto",{"_index":449,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.create",{"_index":456,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.find",{"_index":467,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":466,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findbyemail(loginuserdto.email",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyemail(payload.email",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.getallusers",{"_index":434,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.registeruser(registeruserdto",{"_index":432,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["thrown",{"_index":197,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["token",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginResponse.html":{}}}],["touch",{"_index":575,"title":{},"body":{"index.html":{}}}],["true",{"_index":607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":451,"title":{},"body":{"injectables/UserService.html":{}}}],["twitter",{"_index":581,"title":{},"body":{"index.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/Address.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ExceptionsFilter.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":592,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types.interface",{"_index":229,"title":{},"body":{"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{}}}],["types.interface.ts",{"_index":7,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":537,"title":{},"body":{"index.html":{}}}],["ui",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["ui/auth.controller",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{}}}],["ui/patient.controller",{"_index":327,"title":{},"body":{"modules/PatientModule.html":{}}}],["ui/professional.controller",{"_index":392,"title":{},"body":{"modules/ProfessionalModule.html":{}}}],["ui/user.controller",{"_index":472,"title":{},"body":{"modules/UsersModule.html":{}}}],["unauthorizedexception",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unique",{"_index":606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":552,"title":{},"body":{"index.html":{}}}],["updatepatient",{"_index":276,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["updatepatient(id",{"_index":341,"title":{},"body":{"injectables/PatientService.html":{}}}],["updatepatient(patientdto",{"_index":287,"title":{},"body":{"controllers/PatientController.html":{}}}],["updateprofessional",{"_index":364,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["updateprofessional(id",{"_index":403,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["updateprofessional(professionaldto",{"_index":373,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["useguards",{"_index":293,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":300,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":107,"title":{"interfaces/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["user._id",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercontroller",{"_index":417,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usermodel",{"_index":439,"title":{},"body":{"injectables/UserService.html":{}}}],["userregister",{"_index":448,"title":{},"body":{"injectables/UserService.html":{}}}],["userregister.db.startsession",{"_index":450,"title":{},"body":{"injectables/UserService.html":{}}}],["users/users.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["userschema",{"_index":473,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":124,"title":{"injectables/UserService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":63,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usertype",{"_index":19,"title":{},"body":{"interfaces/Address.html":{},"interfaces/InsuranceCompany.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":246,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":249,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuserbyjwt",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuserbyjwt(payload",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":597,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":194,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["watch",{"_index":547,"title":{},"body":{"index.html":{}}}],["website",{"_index":579,"title":{},"body":{"index.html":{}}}],["went",{"_index":221,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["world",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong",{"_index":222,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["you'd",{"_index":568,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/user-types.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        doorNumber\n                                \n                                \n                                        postalCode\n                                \n                                \n                                        streetName\n                                \n                                \n                                        streetNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        doorNumber\n                                    \n                                \n                                \n                                    \n                                        doorNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streetName\n                                    \n                                \n                                \n                                    \n                                        streetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streetNumber\n                                    \n                                \n                                \n                                    \n                                        streetNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type UserType = 'Patient' | 'Professional';\n\nexport type Gender = 'Male' | 'Female' | 'Other';\n\nexport interface Address {\n  streetName: string;\n  streetNumber: string;\n  doorNumber: string;\n  postalCode: string;\n  city: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nPatientModule\n\nPatientModule\n\nAppModule -->\n\nPatientModule->AppModule\n\n\n\n\n\nProfessionalModule\n\nProfessionalModule\n\nAppModule -->\n\nProfessionalModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            PatientModule\n                        \n                        \n                            ProfessionalModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PatientModule } from './patient/patient.module';\nimport { ProfessionalModule } from './professional/professional.module';\nimport { CommonModule } from './common/common.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [ConfigModule.forRoot(),\n    PatientModule,\n    ProfessionalModule,\n    CommonModule,\n  MongooseModule.forRoot(\n    `mongodb+srv://${process.env.USER}:${process.env.PASSWORD}@${process.env.HOST}?retryWrites=true&w=majority`\n  ),\n  AuthModule,\n  UsersModule\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/ui/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/auth/ui/auth.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { LoginUserDto } from '../domain/dto/login-user-dto';\nimport { AuthService } from '../app/service/auth.service';\nimport { LoginResponse } from '../domain/dto/login-response-dto';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private authService: AuthService) { }\n\n    @Post()\n    async login(@Body() loginUserDto: LoginUserDto): Promise {\n        let result = await this.authService.login(loginUserDto);\n        Logger.log(\"Resultado ->\" + result);\n        return result;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './app/service/auth.service';\nimport { AuthController } from './ui/auth.controller';\nimport { UserService } from 'src/users/app/service/user.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from '../users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './app/strategies/jwt.strategy';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt', session: false }),\n    JwtModule.register({\n      secretOrPrivateKey: 'estaesmiphrassecreate',\n      signOptions: {\n        expiresIn: '10s'\n      }\n    }),\n    UsersModule],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController]\n})\nexport class AuthModule { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/app/service/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createJwtPayload\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUserByJwt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/app/service/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createJwtPayload\n                        \n                        \n                    \n                \n            \n            \n                \ncreateJwtPayload(user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/app/service/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LoginResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/app/service/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUserByJwt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserByJwt(payload: JwtPayLoad)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/app/service/auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayLoad\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, Logger, UnauthorizedException } from '@nestjs/common';\nimport { LoginUserDto } from '../../domain/dto/login-user-dto';\nimport { UserService } from 'src/users/app/service/user.service';\nimport { JwtPayLoad } from '../../domain/dto/payload-dto';\nimport { JwtService } from '@nestjs/jwt';\nimport *  as  bcrypt from 'bcrypt';\nimport { LoginResponse } from 'src/auth/domain/dto/login-response-dto';\nimport { User } from 'src/users/domain/models/user.interface';\n\n@Injectable()\nexport class AuthService {\n\n    constructor(private userService: UserService, private jwtService: JwtService) { };\n\n    async login(loginUserDto: LoginUserDto): Promise {\n        let result = await this.userService.findByEmail(loginUserDto.email);\n        if (!result) throw new NotFoundException();\n        let checkPass = await bcrypt.compare(loginUserDto.password, result.password);\n        if (!checkPass) throw new UnauthorizedException();\n        return this.createJwtPayload(result);\n    }\n\n    createJwtPayload(user): LoginResponse {\n        let data = {\n            email: user.email,\n            id: user._id\n        }\n        let jwt = this.jwtService.sign(data);\n        return {\n            expiresIn: '10s',\n            token: jwt\n        }\n    }\n\n\n    async validateUserByJwt(payload: JwtPayLoad) {\n        Logger.log(\"Entra en validateUserByJWT\");\n        let user = await this.userService.findByEmail(payload.email);\n        if (user) return user;\n        throw new UnauthorizedException();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExceptionsFilter.html":{"url":"classes/ExceptionsFilter.html","title":"class - ExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions-filter/exceptions-filter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions-filter/exceptions-filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Catch, ArgumentsHost, HttpStatus, Logger } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\n\n@Catch()\nexport class ExceptionsFilter extends BaseExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    Logger.error('Exception thrown: ', exception);\n\n    const response = host.switchToHttp().getResponse();\n\n    const message =\n      exception instanceof Error ? exception.message : exception.message.error;\n\n    let status = HttpStatus.INTERNAL_SERVER_ERROR;\n\n    if (exception.status === HttpStatus.BAD_GATEWAY) {\n      status = HttpStatus.BAD_GATEWAY;\n    }\n    if (exception.status === HttpStatus.BAD_REQUEST) {\n      status = HttpStatus.BAD_REQUEST;\n    }\n    if (exception.status === HttpStatus.CONFLICT) {\n      status = HttpStatus.CONFLICT;\n    }\n    if (exception.status === HttpStatus.EXPECTATION_FAILED) {\n      status = HttpStatus.EXPECTATION_FAILED;\n    }\n    if (exception.status === HttpStatus.FORBIDDEN) {\n      status = HttpStatus.FORBIDDEN;\n    }\n    if (exception.status === HttpStatus.NOT_ACCEPTABLE) {\n      status = HttpStatus.NOT_ACCEPTABLE;\n    }\n    if (exception.status === HttpStatus.NOT_FOUND) {\n      status = HttpStatus.NOT_FOUND;\n    }\n    if (exception.status === HttpStatus.REQUEST_TIMEOUT) {\n      status = HttpStatus.REQUEST_TIMEOUT;\n    }\n    if (exception.status === HttpStatus.SERVICE_UNAVAILABLE) {\n      status = HttpStatus.SERVICE_UNAVAILABLE;\n    }\n    if (exception.status === HttpStatus.UNAUTHORIZED) {\n      status = HttpStatus.UNAUTHORIZED;\n    }\n\n    response.status(status).json({\n      status,\n      success: false,\n      error: message,\n      message: 'Something went wrong'\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InsuranceCompany.html":{"url":"interfaces/InsuranceCompany.html","title":"interface - InsuranceCompany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InsuranceCompany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/domain/models/patient.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cardNumber\n                                \n                                \n                                        insuranceCompanyName\n                                \n                                \n                                        insuranceType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardNumber\n                                    \n                                \n                                \n                                    \n                                        cardNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insuranceCompanyName\n                                    \n                                \n                                \n                                    \n                                        insuranceCompanyName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insuranceType\n                                    \n                                \n                                \n                                    \n                                        insuranceType:         InsuranceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InsuranceType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserType, Gender, Address } from '../../../common/interfaces/user-types.interface';\nimport { Document } from 'mongoose';\n\nexport interface Patient extends Document{\n    name: string;\n    firstSurname: string;\n    secondSurname: string;\n    gender: Gender;\n    birthDate: Date;\n    nif: string;\n    address: Address;\n    userType: UserType;\n    nhc: string;\n    insuranceList: InsuranceCompany[];\n}\n\nexport interface InsuranceCompany {\n    insuranceCompanyName: string;\n    insuranceType: InsuranceType;\n    cardNumber: string;\n}\n\nexport type InsuranceType = 'Dental' | 'Health' | 'Family';\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayLoad.html":{"url":"interfaces/JwtPayLoad.html","title":"interface - JwtPayLoad","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayLoad\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/domain/dto/payload-dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayLoad {\n    email:string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/app/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/app/strategies/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayLoad)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/app/strategies/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayLoad\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException, Logger } from '@nestjs/common';\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { AuthService } from '../service/auth.service';\nimport { JwtPayLoad } from '../../../auth/domain/dto/payload-dto';\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\n    constructor(private authService: AuthService) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            secretOrKey: 'estaesmiphrassecreate'\n        })\n        Logger.log(\"Creando el jwtStrategy\");\n    }\n\n    async validate(payload: JwtPayLoad) {\n        Logger.log(\"Entrando a Validate\");\n\n        const user = await this.authService.validateUserByJwt(payload);\n        if (!user) throw new UnauthorizedException();\n        return user;\n\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponse.html":{"url":"classes/LoginResponse.html","title":"class - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/domain/dto/login-response-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expiresIn\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/domain/dto/login-response-dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/domain/dto/login-response-dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginResponse {\n    expiresIn: string;\n    token: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/domain/dto/login-user-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/domain/dto/login-user-dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/domain/dto/login-user-dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDto{\n    readonly email: string;\n    readonly password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Patient.html":{"url":"interfaces/Patient.html","title":"interface - Patient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Patient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/domain/models/patient.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        birthDate\n                                \n                                \n                                        firstSurname\n                                \n                                \n                                        gender\n                                \n                                \n                                        insuranceList\n                                \n                                \n                                        name\n                                \n                                \n                                        nhc\n                                \n                                \n                                        nif\n                                \n                                \n                                        secondSurname\n                                \n                                \n                                        userType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                    \n                                \n                                \n                                    \n                                        birthDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstSurname\n                                    \n                                \n                                \n                                    \n                                        firstSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:         Gender\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Gender\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insuranceList\n                                    \n                                \n                                \n                                    \n                                        insuranceList:         InsuranceCompany[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InsuranceCompany[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nhc\n                                    \n                                \n                                \n                                    \n                                        nhc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nif\n                                    \n                                \n                                \n                                    \n                                        nif:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondSurname\n                                    \n                                \n                                \n                                    \n                                        secondSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userType\n                                    \n                                \n                                \n                                    \n                                        userType:         UserType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserType, Gender, Address } from '../../../common/interfaces/user-types.interface';\nimport { Document } from 'mongoose';\n\nexport interface Patient extends Document{\n    name: string;\n    firstSurname: string;\n    secondSurname: string;\n    gender: Gender;\n    birthDate: Date;\n    nif: string;\n    address: Address;\n    userType: UserType;\n    nhc: string;\n    insuranceList: InsuranceCompany[];\n}\n\nexport interface InsuranceCompany {\n    insuranceCompanyName: string;\n    insuranceType: InsuranceType;\n    cardNumber: string;\n}\n\nexport type InsuranceType = 'Dental' | 'Health' | 'Family';\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PatientController.html":{"url":"controllers/PatientController.html","title":"controller - PatientController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PatientController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/ui/patient.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                patients\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPatient\n                            \n                            \n                                deletePatient\n                            \n                            \n                                getPatient\n                            \n                            \n                                getPatients\n                            \n                            \n                                updatePatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPatient\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePatient(patientDto: PatientDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/patient/ui/patient.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientDto\n                                    \n                                                PatientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePatient\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePatient(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/patient/ui/patient.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPatient\n                        \n                        \n                    \n                \n            \n            \n                \ngetPatient(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/patient/ui/patient.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPatients\n                        \n                        \n                    \n                \n            \n            \n                \ngetPatients()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/patient/ui/patient.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePatient\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePatient(patientDto: PatientDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n            \n                \n                    Defined in src/patient/ui/patient.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientDto\n                                    \n                                                PatientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Delete, Post, Body, Put, UseGuards } from '@nestjs/common';\nimport { Patient } from '../domain/models/patient.interface';\nimport { PatientService } from '../app/service/patient.service';\nimport { PatientDto } from '../domain/dto/patient-dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('patients')\n@UseGuards(AuthGuard())\nexport class PatientController {\n    constructor(private patientService: PatientService) { }\n\n    @Get()\n    getPatients(): Promise {\n        return this.patientService.getPatients();\n    }\n\n    @Get('/:id')\n    getPatient(@Param('id') id: string): Promise {\n        return this.patientService.getPatient(id);\n    }\n\n    @Delete('/:id')\n    deletePatient(@Param('id') id: string): Promise {\n        return this.patientService.deletePatient(id);\n    }\n\n    @Post()\n    createPatient(@Body() patientDto: PatientDto): Promise {\n        return this.patientService.createPatient(patientDto);\n    }\n\n    @Put('/:id')\n    updatePatient(\n        @Body() patientDto: PatientDto,\n        @Param('id') id: string): Promise {\n        return this.patientService.updatePatient(id, patientDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientDto.html":{"url":"classes/PatientDto.html","title":"class - PatientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/domain/dto/patient-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                address\n                            \n                            \n                                birthdate\n                            \n                            \n                                firstSurname\n                            \n                            \n                                gender\n                            \n                            \n                                InsuranceList\n                            \n                            \n                                name\n                            \n                            \n                                nhc\n                            \n                            \n                                nif\n                            \n                            \n                                secondSurname\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstSurname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gender\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InsuranceList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InsuranceCompany[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nhc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nif\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secondSurname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserType, Gender, Address } from '../../../common/interfaces/user-types.interface';\nimport { InsuranceCompany } from '../models/patient.interface'\n\nexport class PatientDto {\n    _id: string;\n    name: string;\n    firstSurname: string;\n    secondSurname: string;\n    gender: Gender;\n    birthdate: Date;\n    nif: string;\n    address: Address;\n    userType: UserType;\n    nhc: string;\n    InsuranceList: InsuranceCompany[]\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PatientModule.html":{"url":"modules/PatientModule.html","title":"module - PatientModule","body":"\n                   \n\n\n\n\n    Modules\n    PatientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PatientModule\n\n\n\ncluster_PatientModule_providers\n\n\n\n\nPatientService\n\nPatientService\n\n\n\nPatientModule\n\nPatientModule\n\nPatientModule -->\n\nPatientService->PatientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/patient/patient.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PatientService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PatientController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PatientController } from './ui/patient.controller';\nimport { PatientService } from './app/service/patient.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { patientSchema } from './infrastructure/mongodb/patient.schema'\nimport { PassportModule } from '@nestjs/passport';\n\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt', session: false }),\n    MongooseModule.forFeature([{ name: 'Patient', schema: patientSchema }])],\n  controllers: [PatientController],\n  providers: [PatientService]\n})\nexport class PatientModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientService.html":{"url":"injectables/PatientService.html","title":"injectable - PatientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/app/service/patient.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPatient\n                            \n                            \n                                    Async\n                                deletePatient\n                            \n                            \n                                    Async\n                                getPatient\n                            \n                            \n                                    Async\n                                getPatients\n                            \n                            \n                                    Async\n                                updatePatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(patientModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/patient/app/service/patient.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        patientModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createPatient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPatient(patientDto: PatientDto)\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientDto\n                                    \n                                                PatientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePatient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePatient(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPatient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPatient(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPatients\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPatients()\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePatient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePatient(id: string, patientDto: PatientDto)\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    patientDto\n                                    \n                                                PatientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PatientDto } from '../../domain/dto/patient-dto'\nimport { Patient } from '../../domain/models/patient.interface'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class PatientService {\n    constructor(@InjectModel('Patient') private patientModel: Model) { }\n\n    async getPatients(): Promise {\n        return await this.patientModel.find();\n    }\n\n    async getPatient(id: string): Promise {\n        return await this.patientModel.findById(id);\n    }\n\n    async deletePatient(id: string): Promise {\n        return await this.patientModel.findByIdAndDelete(id);\n    }\n\n    async createPatient(patientDto: PatientDto): Promise {\n        const patient = new this.patientModel(patientDto);\n        return await patient.save();\n    }\n\n    async updatePatient(id: string, patientDto: PatientDto): Promise {\n        return await this.patientModel.findByIdAndUpdate({ _id: id }, patientDto);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Professional.html":{"url":"interfaces/Professional.html","title":"interface - Professional","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Professional\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professional/domain/models/professional.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        birthdate\n                                \n                                \n                                        firstSurname\n                                \n                                \n                                        gender\n                                \n                                \n                                        medicalBoardNumber\n                                \n                                \n                                        name\n                                \n                                \n                                        nif\n                                \n                                \n                                        professionalType\n                                \n                                \n                                        secondSurname\n                                \n                                \n                                        userType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthdate\n                                    \n                                \n                                \n                                    \n                                        birthdate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstSurname\n                                    \n                                \n                                \n                                    \n                                        firstSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:         Gender\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Gender\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medicalBoardNumber\n                                    \n                                \n                                \n                                    \n                                        medicalBoardNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nif\n                                    \n                                \n                                \n                                    \n                                        nif:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        professionalType\n                                    \n                                \n                                \n                                    \n                                        professionalType:         ProfessionalType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProfessionalType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondSurname\n                                    \n                                \n                                \n                                    \n                                        secondSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userType\n                                    \n                                \n                                \n                                    \n                                        userType:         UserType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserType, Gender, Address } from '../../../common/interfaces/user-types.interface';\nimport { Document } from 'mongoose';\n\nexport interface Professional extends Document {\n    name: string;\n    firstSurname: string;\n    secondSurname: string;\n    gender: Gender;\n    birthdate: Date;\n    nif: string;\n    address: Address;\n    userType: UserType;\n    medicalBoardNumber: string;\n    professionalType: ProfessionalType;\n}\n\nexport type ProfessionalType = 'Doctor' | 'Nurse' | 'Administrator';\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfessionalController.html":{"url":"controllers/ProfessionalController.html","title":"controller - ProfessionalController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfessionalController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professional/ui/professional.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                professionals\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProfessional\n                            \n                            \n                                deleteProfessional\n                            \n                            \n                                getAllProfessionals\n                            \n                            \n                                getProfessional\n                            \n                            \n                                updateProfessional\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createProfessional\n                        \n                        \n                    \n                \n            \n            \n                \ncreateProfessional(professionalDto: ProfessionalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/professional/ui/professional.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    professionalDto\n                                    \n                                                ProfessionalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProfessional\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProfessional(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/professional/ui/professional.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllProfessionals\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllProfessionals()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/professional/ui/professional.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfessional\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfessional(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/professional/ui/professional.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateProfessional\n                        \n                        \n                    \n                \n            \n            \n                \nupdateProfessional(professionalDto: ProfessionalDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n            \n                \n                    Defined in src/professional/ui/professional.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    professionalDto\n                                    \n                                                ProfessionalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Controller, Get, Param, Delete, Post, Body, Put, UseGuards } from '@nestjs/common';\nimport { Professional } from '../domain/models/professional.interface';\nimport { ProfessionalService } from '../app/service/professional.service';\nimport { ProfessionalDto } from '../domain/dto/professional-dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('professionals')\n@UseGuards(AuthGuard())\nexport class ProfessionalController {\n    constructor(private professionalService: ProfessionalService) { }\n\n    @Get()\n    getAllProfessionals(): Promise {\n        return this.professionalService.getAllProfessionals();\n    }\n\n    @Get('/:id')\n    getProfessional(@Param('id') id: string): Promise {\n        return this.professionalService.getProfessional(id);\n    }\n\n    @Delete('/:id')\n    deleteProfessional(@Param('id') id: string): Promise {\n        return this.professionalService.deleteProfessional(id);\n    }\n\n    @Post()\n    createProfessional(\n        @Body() professionalDto: ProfessionalDto,\n    ): Promise {\n        return this.professionalService.createProfessional(professionalDto);\n    }\n\n    @Put('/:id')\n    updateProfessional(\n        @Body() professionalDto: ProfessionalDto,\n        @Param('id') id: string,\n    ): Promise {\n        return this.professionalService.updateProfessional(id, professionalDto);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfessionalDto.html":{"url":"classes/ProfessionalDto.html","title":"class - ProfessionalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfessionalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professional/domain/dto/professional-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                address\n                            \n                            \n                                birthdate\n                            \n                            \n                                firstSurname\n                            \n                            \n                                gender\n                            \n                            \n                                medicalBoardNumber\n                            \n                            \n                                name\n                            \n                            \n                                nif\n                            \n                            \n                                professionalType\n                            \n                            \n                                secondSurname\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstSurname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gender\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            medicalBoardNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nif\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            professionalType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProfessionalType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secondSurname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserType, Gender, Address } from '../../../common/interfaces/user-types.interface';\nimport { ProfessionalType } from '../models/professional.interface'\n\nexport class ProfessionalDto {\n    _id: string;\n    name: string;\n    firstSurname: string;\n    secondSurname: string;\n    gender: Gender;\n    birthdate: Date;\n    nif: string;\n    address: Address;\n    userType: UserType;\n    medicalBoardNumber: string;\n    professionalType: ProfessionalType;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfessionalModule.html":{"url":"modules/ProfessionalModule.html","title":"module - ProfessionalModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfessionalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfessionalModule\n\n\n\ncluster_ProfessionalModule_providers\n\n\n\n\nProfessionalService\n\nProfessionalService\n\n\n\nProfessionalModule\n\nProfessionalModule\n\nProfessionalModule -->\n\nProfessionalService->ProfessionalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/professional/professional.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfessionalService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfessionalController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfessionalController } from './ui/professional.controller';\nimport { ProfessionalService } from './app/service/professional.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { professionalSchema } from './infrastructure/mongodb/professional.schema'\nimport { PassportModule } from '@nestjs/passport';\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt', session: false }),\n    MongooseModule.forFeature([{ name: 'Professional', schema: professionalSchema }])],\n  controllers: [ProfessionalController],\n  providers: [ProfessionalService]\n})\nexport class ProfessionalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfessionalService.html":{"url":"injectables/ProfessionalService.html","title":"injectable - ProfessionalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfessionalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professional/app/service/professional.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfessional\n                            \n                            \n                                    Async\n                                deleteProfessional\n                            \n                            \n                                    Async\n                                getAllProfessionals\n                            \n                            \n                                    Async\n                                getProfessional\n                            \n                            \n                                    Async\n                                updateProfessional\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(professionalModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/professional/app/service/professional.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        professionalModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createProfessional\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfessional(professionalDto: ProfessionalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    professionalDto\n                                    \n                                                ProfessionalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProfessional\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfessional(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllProfessionals\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProfessionals()\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfessional\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfessional(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProfessional\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfessional(id: string, professionalDto: ProfessionalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    professionalDto\n                                    \n                                                ProfessionalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ProfessionalDto } from '../../domain/dto/professional-dto'\nimport { Professional } from '../../domain/models/professional.interface'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class ProfessionalService {\n\n    constructor(@InjectModel('Professional') private readonly professionalModel: Model) { }\n\n    async getAllProfessionals(): Promise {\n        const professionals = await this.professionalModel.find();\n        return professionals;\n    }\n\n    async getProfessional(id: string): Promise {\n        return await this.professionalModel.findById(id);\n    }\n\n    async deleteProfessional(id: string): Promise {\n        return await this.professionalModel.findByIdAndDelete(id);\n    }\n\n    async createProfessional(professionalDto: ProfessionalDto): Promise {\n        const professional = new this.professionalModel(professionalDto);\n        return await professional.save();\n    }\n\n    async updateProfessional(id: string, professionalDto: ProfessionalDto): Promise {\n        return await this.professionalModel.findByIdAndUpdate({ _id: id }, professionalDto);\n    }\n\n\n\n\n\n}\n\n//createProfessional\n//deleteProfessional\n//updateProfessional\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/domain/dto/register-user-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/domain/dto/register-user-dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/domain/dto/register-user-dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class RegisterUserDto {\n    @ApiProperty()\n    email: string;\n    @ApiProperty()\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/domain/models/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface User extends Document {\n    email: string,\n    password: string\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/ui/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                register\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllUsers\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/ui/user.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \nregisterUser(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/ui/user.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Logger, Body, Get, UseGuards, Req } from '@nestjs/common';\nimport { RegisterUserDto } from '../domain/dto/register-user-dto';\nimport { UserService } from '../app/service/user.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\n\n\n@Controller('register')\nexport class UserController {\n\n    constructor(private userService: UserService) { }\n\n    @Post()\n    registerUser(\n        @Body() registerUserDto: RegisterUserDto): Promise {\n        let data = this.userService.registerUser(registerUserDto);\n        Logger.log(data);\n        return data;\n    }\n    \n    @Get()\n    @UseGuards(AuthGuard())\n    getAllUsers() {\n        return this.userService.getAllUsers();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/app/service/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/app/service/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/app/service/user.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/users/app/service/user.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(registerUserDto: RegisterUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/app/service/user.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, BadGatewayException, ConflictException } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { RegisterUserDto } from '../../domain/dto/register-user-dto';\nimport { User } from '../../domain/models/user.interface';\nimport *  as  bcrypt from \"bcrypt\";\n\n@Injectable()\nexport class UserService {\n\n    constructor(@InjectModel(\"User\") private userModel: Model) { }\n\n\n    async registerUser(registerUserDto: RegisterUserDto): Promise {\n\n        const UserRegister = new this.userModel(registerUserDto);\n        const session = await UserRegister.db.startSession();\n\n        try {\n            session.startTransaction();\n            let pass = await bcrypt.hash(registerUserDto.password, 10);\n            await this.userModel.create([{ \"email\": registerUserDto.email, \"password\": pass }], { session: session })\n            await session.commitTransaction();\n        } catch (error) {\n            Logger.error(error);\n            await session.abortTransaction();\n            if (error.code === 11000) throw new ConflictException(\"Duplicated user\");\n            throw new BadGatewayException();\n        } finally {\n            session.endSession();\n        }\n    }\n\n    async findByEmail(email: string): Promise {\n        return this.userModel.findOne({ email: email });\n    }\n\n    async getAllUsers(): Promise {\n        return await this.userModel.find();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUsersModule\n\nUsersModule\n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './app/service/user.service';\nimport { UserController } from './ui/user.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { userSchema } from './infrastructure/Mongodb/user.schema';\nimport { PassportModule } from '@nestjs/passport';\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'User', schema: userSchema }]),\n    PassportModule.register({ defaultStrategy: 'jwt', session: false }),\n  ],\n  exports: [UserService],\n  providers: [UserService],\n  controllers: [UserController]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/app/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/app/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/domain/dto/login-response-dto.ts\n            \n            class\n            LoginResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/domain/dto/login-user-dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/domain/dto/payload-dto.ts\n            \n            interface\n            JwtPayLoad\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/ui/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/exceptions-filter/exceptions-filter.ts\n            \n            class\n            ExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interfaces/user-types.interface.ts\n            \n            interface\n            Address\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patient/app/service/patient.service.ts\n            \n            injectable\n            PatientService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/patient/domain/dto/patient-dto.ts\n            \n            class\n            PatientDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/patient/domain/models/patient.interface.ts\n            \n            interface\n            InsuranceCompany\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patient/domain/models/patient.interface.ts\n            \n            interface\n            Patient\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/patient/infrastructure/mongodb/patient.schema.ts\n            \n            variable\n            patientSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patient/ui/patient.controller.ts\n            \n            controller\n            PatientController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/professional/app/service/professional.service.ts\n            \n            injectable\n            ProfessionalService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/professional/domain/dto/professional-dto.ts\n            \n            class\n            ProfessionalDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/professional/domain/models/professional.interface.ts\n            \n            interface\n            Professional\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/professional/infrastructure/mongodb/professional.schema.ts\n            \n            variable\n            professionalSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/professional/ui/professional.controller.ts\n            \n            controller\n            ProfessionalController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/app/service/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/domain/dto/register-user-dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/domain/models/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/infrastructure/mongodb/user.schema.ts\n            \n            variable\n            userSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/ui/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.5.12\n        \n            bcrypt : ^5.0.0\n        \n            mongoose : ^5.9.25\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PatientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfessionalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PatientModule\n\n\n\ncluster_PatientModule_providers\n\n\n\ncluster_ProfessionalModule\n\n\n\ncluster_ProfessionalModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nPatientModule\n\nPatientModule\n\nAppModule -->\n\nPatientModule->AppModule\n\n\n\n\n\nProfessionalModule\n\nProfessionalModule\n\nAppModule -->\n\nProfessionalModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nPatientModule -->\n\nPatientService->PatientModule\n\n\n\n\n\nProfessionalService\n\nProfessionalService\n\nProfessionalModule -->\n\nProfessionalService->ProfessionalModule\n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Gender   (src/.../user-types.interface.ts)\n                        \n                        \n                            InsuranceType   (src/.../patient.interface.ts)\n                        \n                        \n                            ProfessionalType   (src/.../professional.interface.ts)\n                        \n                        \n                            UserType   (src/.../user-types.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/interfaces/user-types.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Gender\n                \n            \n            \n                \n                        \"Male\" | \"Female\" | \"Other\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserType\n                \n            \n            \n                \n                        \"Patient\" | \"Professional\"\n\n                \n            \n        \n    \n    src/patient/domain/models/patient.interface.ts\n    \n    \n        \n            \n                \n                    \n                    InsuranceType\n                \n            \n            \n                \n                        \"Dental\" | \"Health\" | \"Family\"\n\n                \n            \n        \n    \n    src/professional/domain/models/professional.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ProfessionalType\n                \n            \n            \n                \n                        \"Doctor\" | \"Nurse\" | \"Administrator\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            patientSchema   (src/.../patient.schema.ts)\n                        \n                        \n                            professionalSchema   (src/.../professional.schema.ts)\n                        \n                        \n                            userSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/patient/infrastructure/mongodb/patient.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            patientSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    name: String,\n    firstSurname: String,\n    secondSurname: String,\n    gender: String,\n    birthDate: Date,\n    nif: String,\n    userType: String,\n    address: {\n        street: String,\n        streetNumber: String,\n        doorNumber: String,\n        postalCode: String,\n        city: String,\n    },\n    nhc: String,\n    insuranceList: Array\n})\n                        \n                    \n\n\n            \n        \n\n    src/professional/infrastructure/mongodb/professional.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            professionalSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    name: String,\n    firstSurname: String,\n    secondSurname: String,\n    gender: String,\n    birthDate: Date,\n    nif: String,\n    userType: String,\n    address: {\n        street: String,\n        streetNumber: String,\n        doorNumber: String,\n        postalCode: String,\n        city: String,\n    },\n    medicalBoardNumber: String,\n    professionalType: String\n})\n                        \n                    \n\n\n            \n        \n\n    src/users/infrastructure/mongodb/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    email: {\n        type: String,\n        unique: true,\n        required: true},\n    password: String,\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
